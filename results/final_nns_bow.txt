Query: ADC: GOVRE Bit is not Set when Reading CDR
NNs
Failure: 
43.2.1.6 ADC: GOVRE Bit is Not Set when Reading CDR
Workaround: 
None

Failure: 
43.1.1.6 ADC: GOVRE Bit is Not Set when Reading CDR
Workaround: 
None

Failure: 
43.2.1.5 ADC: GOVRE Bit is Not Updated
Workaround: 
None

Failure: 
43.1.1.5 ADC: GOVRE Bit is Not Updated
Workaround: 
None 790 SAM926O [DATASHEET] AtmeL Almel-6221 M-ATARM-SAMQZSO-DatasheetJ 3-Jan-16

Failure: 
ADC: GOVRE Bit is not Set when Disabling a Channel
Workaround: 
None

-------------
Query: A burst write  access will miss the  first word when the  burst write follows  another burst  operation
NNs
Failure: 
An alarm set to an odd number of seconds results in a false interrupt one second before the actual alarm time, followed by the actual interrupt.
Workaround: 
Either set the seconds alarm register to an even value or, if set to an odd value, when the interrupt occurs, check the current time against the alarm time. If it does not match, then clear the interrupt and return. The actual interrupt will occur one second later.

Failure: 
When Hardware Handshaking is used and if CTS goes low near the end of the starting bit, a character can be lost.
Workaround: 
CTS must not go low during a time slot occurring between 2 Master Clock periods before the starting bit and 16 Master Clock periods after the rising edge of the starting bit.

Failure: 
The XOFF character is sent only when the receive buffer is detected full. While the XOFF is being sent, the remote
Workaround: 
None.

Failure: 
When loading the TWI_RHR, the transfer direction is ignored. The last data byte received in the TWI_RHR is corrupted at the end of the first subsequent transmit data byte . Neither RXRDY nor OVERRUN status bits are set if
Workaround: 
The user must be sure that received data is read before transmitting any new data. 40.11.12 USART: Universal Synchronous Asynchronous Receiver Transmitter

Failure: 
In word-wide frame-sync mode, if SSI_EN and TX/RX_EN are set near new frame start, SSI Receive and Transmit does not function properly and there is a chance of words getting missed/shifted or transmit data line being driven low for 1/2 clock cycles during the first frame.
Workaround: 
To ensure a gap of at least 2 bit-clock cycles between SSI_EN and TX/RX bit setting (only for External word-wide frame-sync patterns), here is an example code for this workaround. void ssi_transmit_receive_test() { //parameters defined here Statement1 (); //clock configuration here Statement2(); //AUDMUX configuration here Statement3(); //SSI configuration here Statement4(); //Enable SSI by programming SSI_SCR MEMWD(SSI2_SCR,scr_mask1); //delay some time for the SSI state machine to function //properly for(i=0;i<=5;i++); //Enable transmit and receive of SSI by programming //SSI_SCR MEMWD(SSI2_SCR,scr_mask2); ...... }

-------------
Query: SPI: LASTXFER (Last Transfer) behavior
NNs
Failure: 
SPI: LASTXFER (Last Transfer) Behavior
Workaround: 
Use the CS in PIO mode when PDC mode is required and CS has to be maintained between transfers.

Failure: 
3.12 CAP.1: Problem when selecting P0.21 as a capture 1.3 input (timer1) 
Workaround: 
 To use P0.21 as capture 1.3, PINSEL(7:6) must also be set to â11â which means that P0.19 must be selected as capture input 1.2. ES_LPC2114_24_00 . Â©   Rev. 3 â 1 April 2011 10 of 22  ES_LPC2114/24; LPC2114/24/00  LPC2114/24, LPC2114/00, LPC2124/00 

Failure: 
SPI: Bad tx_ready behavior when CSAAT=1 and SCBR = 1
Workaround: 
Do not use the combination CSAAT=1 and SCBR =1.

Failure: 
 1.1.9   USB2.0 (USB0) and USB1.1 (USB1) Power Supply  
Workaround: 
  To prevent a latch up condition from occurring over the life of the device, the following recommendations should be followed:  •  USB0_VDDA18 and USB1_VDDA18 power supply rails must have greater than 1ms  (10%-90%) slew  •  USB0_VDDA33 and USB1_VDDA33 power supply rails must have less than 100-mv  pk-pk noise  •  USB0_VBUS power supply rail must have less than 100-mv pk-pk noise sustained  and must have greater than 1ms (10%-90%) slew  46  OMAP-L137 Silicon Revisions 3.0, 2.1, 2.0, 1.1, and 1.0  SPRZ291I – October 2008 – Revised June 2014  Submit Documentation Feedback   1.1 Usage Notes and Known Design Exceptions to Functional Specifications 

Failure: 
AUSx bits do not  work for address bit  A[23].  Note: The AUS feature  is not only for  ADDR[25:16]  (Address Bus  MSB), but also  for ADDR[15:0]  (Multiplexed  Address Bus  LSB)
Workaround: 
 Set AUSx to 0, if address bit A[23] is needed to address the  external device. 

-------------
Query: 3.14 Core.1: Incorrect update of the Abort Link register in Thumb state 
NNs
Failure: 
3.4 Core.1: Incorrect update of the Abort Link register in Thumb state 
Workaround: 
 In a system that does not use Thumb state, there will be no problem. In a system that uses Thumb state but does not use data aborts, or does not try to use data aborts in a recoverable manner, there will be no problem. Otherwise the workaround is to ensure that a STR, STMIA or PUSH cannot precede a PC-relative load. One method for this is to add a NOP before any PC-relative load instruction. However this is would have to be done manually. ES_LPC2364_66_68 . Â© NXP B.V. 2012. All rights reserved.  Rev. 9.1 â 1 July 2012 8 of 20  ES_LPC2364_66_68  LPC2364/66/68 

Failure: 
3.1 Core.1: Incorrect update of the Abort Link register in Thumb state 
Workaround: 
 In a system that does not use Thumb state, there will be no problem. In a system that uses Thumb state but does not use data aborts, or does not try to use data aborts in a recoverable manner, there will be no problem. Otherwise the workaround is to ensure that a STR, STMIA or PUSH cannot precede a PC-relative load. One method for this is to add a NOP before any PC-relative load instruction. However this is would have to be done manually. ES_LPC2102 . Â©   Rev. 2 â 1 March 2011 4 of 13  ES_LPC2102  LPC2102 

Failure: 
3.1 CORE.1: Incorrect update of the Abort Link register in Thumb state 
Workaround: 
 In a system that does not use Thumb state, there will be no problem. In a system that uses Thumb state but does not use data aborts, or does not try to use data aborts in a recoverable manner, there will be no problem. Otherwise the workaround is to ensure that a STR, STMIA or PUSH cannot precede a PC-relative load. One method for this is to add a NOP before any PC-relative load instruction. However this would have to be done manually. ES_LPC21X9/01 . Â©   Rev. 3 â 1 October 2011 4 of 9  ES_LPC21x9/01  LPC2109/01, LPC2119/01, LPC2129/01 

Failure: 
3.2 Core.1: Incorrect update of the Abort Link register in Thumb state 
Workaround: 
 In a system that does not use Thumb state, there will be no problem. In a system that uses Thumb state but does not use data aborts, or does not try to use data aborts in a recoverable manner, there will be no problem. Otherwise the workaround is to ensure that a STR, STMIA or PUSH cannot precede a PC-relative load. One method for this is to add a NOP before any PC-relative load instruction. However this would have to be done manually. ES_LPC2470_78 . Â© NXP B.V. 2012. All rights reserved.  Rev. 8.1 â 1 July 2012 6 of 13  ES_LPC2470_78  LPC2470/78 

Failure: 
3.20 WDT.1: Accessing non-Watchdog APB registers in the middle of the feed sequence causes a reset 
Workaround: 
 Avoid APB accesses in the middle of the feed sequence. This implies that interrupts and the GPDMA should be disabled while feeding the Watchdog. ES_LPC2364_66_68 . Â© NXP B.V. 2012. All rights reserved.  Rev. 9.1 â 1 July 2012 16 of 20  ES_LPC2364_66_68  LPC2364/66/68 4. AC/DC deviations detail 

-------------
Query: 3.4 DC/DC.1: DC/DC converter start-up issue 
NNs
Failure: 
4.2 V3.1: Leakage current on V3 due to External Interrupt and/or Analog to Digital Converter (ADC) pins. 
Workaround: 
 None.

Failure: 
3.6 Ethernet.1: Setting up the Ethernet interface in RMII mode 
Workaround: 
 To use the Ethernet interface in RMII mode write a 1 to bit 12 (P1.16) in PINSEL2 register (located at 0xE002 C008). This workaround only applies for Rev â-â devices and does not apply for Rev âAâ and newer devices. In order to have both Rev â-â and other revisions coexist in the same piece of software, the MAC module ID can be used to identify the part and determine if port pin P1.6 needs to be set or not. Here are the steps (along with some sample code) to initialize the MAC based on the module ID: 1. In master header file lLPC24xx.h, make sure Module ID is defined (Please note, this ID register is not documented in the User's Manual). #define MAC_BASE_ADDR 0xFFE00000 #define MAC_MODULEID (*(volatile unsigned long *)(MAC_BASE_ADDR + 0xFFC)) /* Module ID reg (RO) */ 2. In the beginning of the MAC initialization file, add below definition: #define OLD_EMAC_MODULE_ID 0x3902 << 16) | 0x2000) 3. In MAC initialization routine, right after setting the EMAC clock in the PCONP register, add a few lines as below: /* Turn on the ethernet MAC clock in PCONP, bit 30 */ regVal = PCONP; regVal |= PCONP_EMAC_CLOCK; PCONP = regVal; /*------------------------------------------------------ * Write to PINSEL2/3 to select the PHY functions on P1[17:0] ES_LPC2364_66_68 . Â© NXP B.V. 2012. All rights reserved.  Rev. 9.1 â 1 July 2012 9 of 20  ES_LPC2364_66_68  LPC2364/66/68 * P1.6, ENET-TX_CLK, has to be set for Rev '-' devices and it * must not be set for Rev 'Aâ and newer devices *------------------------------------------------------*/ regVal = MAC_MODULEID; if ( regVal == OLD_EMAC_MODULE_ID ) { /* On Rev. '-', MAC_MODULEID should be equal to OLD_EMAC_MODULE_ID, P1.6 should be set. */ PINSEL2 = 0x50151105; /* selects P1[0,1,4,6,8,9,10,14,15] */ } else { /* on rev. 'A', MAC_MODULEID should not equal to OLD_EMAC_MODULE_ID, P1.6 should not be set. */ PINSEL2 = 0x50150105; /* selects P1[0,1,4,8,9,10,14,15] */ } PINSEL3 = 0x00000005; /* selects P1[17:16] */ 

Failure: 
3.6 WDT.1: Accessing non-Watchdog APB registers during the feed sequence causes a reset 
Workaround: 
 Avoid APB accesses in the middle of the feed sequence. This implies that interrupts and the GPDMA should be disabled while feeding the Watchdog. ES_LPC2131_01 . Â© NXP B.V. 2012. All rights reserved.  Rev. 2.1 â 1 May 2012 9 of 13  ES_LPC2131/01  LPC2131/01 

Failure: 
 2.0.20, no additional modifications are required as a fix for this Advisory.  As shown in Figure 10, issuing a second POR will always latch the BOOT pins while the internal pulldown resistors enabled.  SPRZ301M – June 2009 – Revised March 2014  OMAP-L138 C6000 DSP+ARM® Processor Silicon Revisions 2.3, 2.1, 2.0,  33  Submit Documentation Feedback  1.1 and 1.0  Copyright © 2009–2014, Texas Instruments Incorporated  Silicon Revision 2.3 Usage Notes and Known Design Exceptions to Functional Specifications www.ti.com  
Workaround: 
Workaround(s)

Failure: 
3.12 CAP.1: Problem when selecting P0.21 as a capture 1.3 input (timer1) 
Workaround: 
 To use P0.21 as capture 1.3, PINSEL(7:6) must also be set to â11â which means that P0.19 must be selected as capture input 1.2. ES_LPC2114_24_00 . Â©   Rev. 3 â 1 April 2011 10 of 22  ES_LPC2114/24; LPC2114/24/00  LPC2114/24, LPC2114/00, LPC2124/00 

-------------
Query:  2.0.20  Intermittent Boot Failures  
NNs
Failure: 
 2.0.20      Intermittent Boot Failures   
Workaround: 
  Modify the target board so that the affected device is given a secondary reset on power-up as shown in Figure 6. Two example methods are described in the sections that  follow.  Although secondary resets are compatible with future silicon revisions, they are not required for devices where the root cause has been fixed via an updated DSP boot  ROM. In order to reduce BOM costs, board designers may want to route a reset signal  bypass path so that the workaround circuit can be depopulated on future PCB builds.  ❏ Use a reset supervisor device that includes a watchdog timeout function so that the reset supervisor will issue a secondary reset if the device fails to boot. The watchdog should be serviced with a device signal that is controlled by software. Options for  servicing the watchdog timeout include GPIO, unused clock sources such as  OBSCLK or a periodic output peripheral like TIMER and ePWM.  Some TPS382x reset supervisors include a watchdog function (shown in Figure 9).  34  OMAP-L137 Silicon Revisions 3.0, 2.1, 2.0, 1.1, and 1.0  SPRZ291I – October 2008 – Revised June 2014  Submit Documentation Feedback  Copyright © 2008–2014, Texas Instruments Incorporated      www.ti.com  Silicon Revision 2.0 Usage Notes and Known Design Exceptions to Functional Specifications TPS3820      3.3V   OMAP-L137   VDD  DVDD  GND  GND  Board Reset  MR  WDI  GPIO  RESET      RESET   0-W      Not Populated   Figure 9. Reset Supervisor with Watchdog Function  The watchdog supervisor workaround is easy to implement, however the watchdog  timeout period may exceed application boot-up time requirements. For example, the  TPS3820 has a typical watchdog timeout period of 200ms. The second workaround can  speed up the reset process.  ❏ Implement a logic-based secondary reset circuit which is timed using RC  components. For the circuit shown in Figure 10, a single board reset control signal  can trigger three logic transitions in a dual XOR gate device.      Not Populated   0-W  1A  R1  1Y  1B  Board Reset  1  C1  1A  RESET  R2  1Y  1B  2  R3  SN74LVC2G86  C2  Dual XOR Gate  SN74LVC2G17      Dual Schmitt Buffer   Figure 10. RC-Timed Secondary Reset  This is possible because each RC load connected to the board reset control signal can output a different rising-edge waveform. With increasing RC load, the resulting control signal will reach the Schmitt buffers’ Vih level at a later point in time. Figure 11 shows the relationship between the board reset signal and the RESET signal produced by the circuit. The blue and green lines represent the voltage as seen by the Schmitt buffers.  The output voltage of a charging RC circuit is defined as: Vo = Vi * (1 - e^[-t / RC]) SPRZ291I – October 2008 – Revised June 2014  OMAP-L137 Silicon Revisions 3.0, 2.1, 2.0, 1.1, and 1.0  35  Submit Documentation Feedback   2.0 Usage Notes and Known Design Exceptions to Functional Specifications www.ti.com  R1C1  RESET  R2C2  Vih      Board Reset   Figure 11. RESET Signal vs Board Reset  Given ideal conditions, a 3.3V board reset signal, and an input buffer Vih of 1.4V, the following set of component values would generate an initial RESET high period (R1C1  region) of approximately 2ms and a RESET low period (R2C2 region) of approximately  0.5ms:  •  R1 = 36k, C1 = 100nF  •  R2 = 45k, C2 = 100nF  •  R3 = 450k  When implementing this workaround, some important aspects should be kept in mind:  (a) The dual Schmitt buffer is included because the dual XOR gate has an input rise-time requirement that is violated by the RC circuits.  (b) The Board Reset signal must meet the XOR gate input rise-time requirement and  must provide enough output current to charge the RC circuits to the target Vih level.  (c) It is critical for the Vih level of the two input buffers to be very close together so only single-device buffers should be considered for this circuit (such as the 2-in-1 dual Schmitt buffer device used in this example).  (d) Variations in the electrical characteristics of the circuit components may produce waveforms that deviate from ideal calculations.  (e) The sole purpose of the R3 pull-down resistor is to discharge the RC components  before the board reset signal is driven high. Therefore, the value selected for R3  should be sufficiently large enough to not interfere with the RC circuits as they are charging.  36  OMAP-L137 Silicon Revisions 3.0, 2.1, 2.0, 1.1, and 1.0  SPRZ291I – October 2008 – Revised June 2014  Submit Documentation Feedback   1.1 Usage Notes and Known Design Exceptions to Functional Specifications 5  Silicon Revision 1.1 Usage Notes and Known Design Exceptions to Functional      Specifications   This section describes the usage notes and advisories that apply to silicon revision 1.1 of the OMAP-L137  device .      5.1   Usage Notes for Silicon Revision 1.1  Usage notes highlight and describe particular situations where the device's behavior may not match presumed or documented behavior. This may include behaviors that affect device performance or functional correctness. These usage notes will be incorporated into future documentation updates for the device (such as the device-specific data sheet), and the behaviors they describe will not be altered in future silicon revisions.  Silicon revision 1.1 applicable usage notes have been found on a later silicon revision. For more details, see Section 2.1, Usage Notes for Silicon Revision 3.0.      5.1.1   RTC Standby Power Consumption Is Elevated if the Module Is Not Configured Correctly On Silicon Revision 1.1 and earlier, the RTC module is designed with the ability to keep time while the rest of the device is power cycled off and on. This ability is achieved by placing the RTC in its own power domain and isolating it from the device reset signal.  When the CVDD supply is powered down, the RTC_CVDD supply will experience elevated standby power consumption because of leakage between the RTC and core power domains. The RTC module includes circuitry that eliminates the leakage paths between the two domains when the SPLITPOWER bit is set to 1  in the control register (CTRL). The SPLITPOWER bit is a write-only bit that will always read back 0.  Therefore, typical read-modify-write sequences should not be used when writing to the CTRL register because the SPLITPOWER bit will be cleared back to 0.  Also note that the SPLITPOWER bit has a default value of 0 after RTC module reset, and the only reset available to the RTC module is a software reset, therefore RTC is in an indeterminate state when the RTC_CVDD supply is first powered on. The RTC module should be reset, and the SPLITPOWER bit should be set to 1 before placing the device in a CVDD powered down standby state. The SPLITPOWER  bit is permanently set to 1 inside the RTC module beginning with Silicon Revision 2.0 of the device.      5.1.2   SYSCFG: Possible Race Condition When Using KICK Registers  On Silicon Revision 1.1 and earlier, when two or more threads are simultaneously accessing the SYSCFG  registers, there is the potential for one thread to lock the SYSCFG registers while another thread is still accessing them. There is no hardware semaphore to prevent this from occurring.  For example, the race condition can occur in the following situation  1. Thread 1 unlocks the SYSCFG register by writing to the KICK registers  2. An interrupt occurs and Thread 2 unlocks the SYSCFG registers as well  3. Thread 2 finishes and locks the SYSCFG registers  4. Thread 1 is locked out of the SYSCFG registers and is unable to complete its task To prevent the SYSCFG lockout race condition, the application should unlock the SYSCFG registers via the KICK registers and leave them permanently unlocked.  Starting with silicon revision 2.0, the KICK registers will be disabled and the SYSCFG registers will be permanently accessible. Writes to the disabled KICK registers will have no effect.      5.2   Silicon Revision 1.1 Known Design Exceptions to Functional Specifications  Some silicon revision 1.1 applicable advisories have been found on a later silicon revision. For more details, see  •  Section 2.2, Silicon Revision 3.0 Known Design Exceptions to Functional Specifications  •  Section 3.2, Silicon Revision 2.1 Known Design Exceptions to Functional Specifications SPRZ291I – October 2008 – Revised June 2014  OMAP-L137 Silicon Revisions 3.0, 2.1, 2.0, 1.1, and 1.0  37  Submit Documentation Feedback   1.1 Usage Notes and Known Design Exceptions to Functional Specifications www.ti.com  •  Section 4.2, Silicon Revision 2.0 Known Design Exceptions to Functional Specifications Table 5. Silicon Revision 1.1 Advisory List  Title ................................      Page   

Failure: 
 2.3.23   BOOT: Internal Pullup Resistors for BOOT[7:0] Pins Are Sometimes Enabled  During Reset, Leading to Boot Failures  
Workaround: 
:  The following Workaround must be implemented to ensure that the boot pins are always latched correctly:  Use strong external pull resistors on BOOT[7:0] pins. Since either the internal pullup or pulldown resistors could be enabled after every power-on, the external resistors must be strong enough to oppose the internal pulls in either case.  Section 4, Device Operating Conditions, of the device datasheet shows the electrical characteristics information which can be used to calculate the maximum external pull resistance required. The value is dependent on the DVDD3318_C I/O supply level.  For BOOT pins which need to be sampled as logical low, the external pulldown  resistance (R  ) must be selected by assuming the internal pullup is enabled. The  PDmax  calculation is shown in Table 11.  28  OMAP-L132 C6000™ DSP+ARM® Processor Silicon Revisions 2.3, 2.1  SPRZ317G – August 2011 – Revised March 2014  Submit Documentation Feedback  Copyright © 2011–2014, Texas Instruments Incorporated  www.ti.com  Silicon Revision 2.3 Usage Notes and Known Design Exceptions to Functional Specifications Table 11. Required Pulldown Resistance (R  ) for Logical Low BOOT Pins      PDmax   æ V ö  IL  ç  ÷  DVDD3318_C  I  V  I      IL   è I      R   I ø      PDmax   3.3 V  310 µA  0.80 V  2.58 kΩ  1.8 V  310 µA  0.80 V  2.03 kΩ  For BOOT pins which need to be sampled as logical high, the external pullup resistance (R  ) must be selected by assuming the internal pulldown is enabled. The calculation PUmax  is shown in Table 2.  Table 12. Required Pullup Resistance (R  ) for Logical High BOOT Pins      PUmax   æ DVDD 3318 _ C - V  ö  IH  ç  ÷  DVDD3318_C  I  V  I      IH   I   è  I  ø      RPUmax   3.3 V  270 µA  2.00 V  4.81 kΩ  1.8 V  270 µA  1.17 V  2.33 kΩ  SPRZ317G – August 2011 – Revised March 2014  OMAP-L132 C6000™ DSP+ARM® Processor Silicon Revisions 2.3, 2.1  29  Submit Documentation Feedback  Copyright © 2011–2014, Texas Instruments Incorporated  Silicon Revision 2.3 Usage Notes and Known Design Exceptions to Functional Specifications www.ti.com      

Failure: 
 2.3.23  BOOT: Internal Pullup Resistors for BOOT[7:0] Pins Are Sometimes Enabled  During Reset, Leading to Boot Failures  
Workaround: 
:  One of the following Workarounds must be implemented to ensure that the boot pins are always latched correctly:  Method 1  Use strong external pull resistors on BOOT[7:0] pins. Since either the internal pullup or pulldown resistors could be enabled after every power-on, the external resistors must be strong enough to oppose the internal pulls in either case.  Section 4, Device Operating Conditions, of the device datasheet shows the electrical characteristics information which can be used to calculate the maximum external pull resistance required. The value is dependent on the DVDD3318_C I/O supply level.  For BOOT pins which need to be sampled as logical low, the external pulldown  resistance (R  ) must be selected by assuming the internal pullup is enabled. The  PDmax  calculation is shown in Table 13.  32  OMAP-L138 C6000 DSP+ARM® Processor Silicon Revisions 2.3, 2.1, 2.0,  SPRZ301M – June 2009 – Revised March 2014  1.1 and 1.0  Submit Documentation Feedback  Copyright © 2009–2014, Texas Instruments Incorporated  www.ti.com  Silicon Revision 2.3 Usage Notes and Known Design Exceptions to Functional Specifications Table 13. Required Pulldown Resistance (R  ) for Logical Low BOOT Pins  PDmax  æ V ö  IL  ç  ÷  DVDD3318_C  I  V  I  IL  è I  R  I ø  PDmax      3.3 V   310 µA      0.80 V   2.58 kΩ      1.8 V   310 µA      0.80 V   2.03 kΩ  For BOOT pins which need to be sampled as logical high, the external pullup resistance (R  ) must be selected by assuming the internal pulldown is enabled. The calculation  PUmax  is shown in Table 2.  Table 14. Required Pullup Resistance (R  ) for Logical High BOOT Pins  PUmax  æ DVDD 3318 _ C - V  ö  IH  ç  ÷  DVDD3318_C  I  V  I  IH  I  è  I  ø  RPUmax      3.3 V   270 µA      2.00 V   4.81 kΩ      1.8 V   270 µA      1.17 V   2.33 kΩ  Method 2  For applications that have already implemented the Secondary Reset Workaround  described in 

Failure: 
 2.3.24  Boot: ECC Data Error in Spare Area Causes NAND Boot Failure  
Workaround: 
:  The workaround ignores errors in ECC data (these errors do not need to be corrected) so that the boot process can continue, correcting errors in the user data (up to 4 bit errors total), as necessary. The workaround also includes a mechanism to restart the NAND read process from the next good block if an uncorrectable error (more than 4 bit errors) is detected on any page of a good block.  This workaround is implemented using a software patch that is loaded in device RAM at boot time and is designed to change the default behavior of the ECC Correct and Read functions in the RBL. The patch binary replaces function pointers to the ECC Correct and Read functions in the ROM function table, (defined in device internal memory),  during boot. The patch binary will reside in page0 of the NAND block and so will be applied only after the page0 of a good block has been read.  Once the patch is read, all subsequent page reads in the block will use the new ECC  Correct and Read functions. ECC data errors on any page (other than page0) are  ignored, any user data error (up to 4 bit errors total) is corrected and the boot process continues. If an uncorrectable error is detected on any page, the block is skipped and the boot process is restarted on the next good block. The behavior of the device boot from the NAND after application of the patch is shown in Figure 12.  SPRZ301M – June 2009 – Revised March 2014  OMAP-L138 C6000 DSP+ARM® Processor Silicon Revisions 2.3, 2.1, 2.0,  35  Submit Documentation Feedback  1.1 and 1.0  Copyright © 2009–2014, Texas Instruments Incorporated    Silicon Revision 2.3 Usage Notes and Known Design Exceptions to Functional Specifications www.ti.com  (1)  All pages marked in green are good and all pages marked in red have "uncorrectable" errors.  Figure 12. D800K008 ROM Behavior With Software Patch Applied(1)  The software patch is available as a pre-built file with the latest version of the AIS tool that is used to generate the NAND flash boot image. The Using the OMAP-L132/L138  Bootloader Application Report (Literature number: SPRAB41) provides a link to the install package for the AIS tool which includes the following in the install directory: prebuilt patch files, the GUI AIS generation tool (AISGEN.exe, version 1.11 or later), command-line AIS generation tool and an example INI file.  Application of the Software Patch to NAND Boot Images:  •  For the GUI tool, AISGEN.exe version 1.11 or later (found in the install directory), the patch integrates the modified ECC Correct function into the user application file to generate one binary AIS file.  •  For the Command line AIS tool, HEXAIS_OMAP_L138.exe users (found in the install  directory), the patch can be integrated into the user application file to generate one binary AIS file by inserting lines below to the end of the INI configuration file.  The patch name is: ARM_nand_ecc_patch_OMAP-L138.out  36  OMAP-L138 C6000 DSP+ARM® Processor Silicon Revisions 2.3, 2.1, 2.0,  SPRZ301M – June 2009 – Revised March 2014  1.1 and 1.0  Submit Documentation Feedback  Copyright © 2009–2014, Texas Instruments Incorporated  www.ti.com  Silicon Revision 2.3 Usage Notes and Known Design Exceptions to Functional Specifications  [INPUTFILE] ; get the NAND ECC patch file  FILENAME=Patch_name.out  ; patch the NAND ECC handling routine  [AIS_Jump]  LOCATION=_NAND_ECC_patchApply  •  The patch will be burnt on page0, as it is in the head of AIS file. Once page0 has  been read successfully, the AIS set command will overwrite the function pointer in the RBL with the modified function pointer and the modified function will be applied to the later pages read. Memory usage of the patch at boot time is as follows:  –  500 bytes at location 0xFFFF 0B00  Recommendations to Improve Robustness:  •  Page0 should be stored on multiple blocks as backup to take advantage of the safety mechanism built into Silicon Revision 2.1 to cycle to the next block when a page0  read fails in a good block.  •  Maintain backup boot images in multiple blocks. The patch to the Abort function  reinitializes the boot process and forces the boot to cycle to the next good block and restart the boot process by reading from it.  •  Silicon Revision 2.1 supports booting from Block 0 of the flash which many NAND  manufacturers guarantee as a “more reliable” block than all other blocks. Hence,  setting up boot to start from that Block 0 could help improve the reliability of boot.  This is a hardware change, requiring the bootmode pins BOOT[6:5] = 1x.  For more details on the bootmode pins, see the Using the OMAP-L132/L138  Bootloader Application Report (Literature number: SPRAB41), NAND-Boot Modes.  SPRZ301M – June 2009 – Revised March 2014  OMAP-L138 C6000 DSP+ARM® Processor Silicon Revisions 2.3, 2.1, 2.0,  37  Submit Documentation Feedback  1.1 and 1.0  Copyright © 2009–2014, Texas Instruments Incorporated  Silicon Revision 2.3 Usage Notes and Known Design Exceptions to Functional Specifications www.ti.com  

Failure: 
 2.3.24   Boot: ECC Data Error in Spare Area Causes NAND Boot Failure  
Workaround: 
:  The workaround ignores errors in ECC data (these errors do not need to be corrected) so that the boot process can continue, correcting errors in the user data (up to 4 bit errors total), as necessary. The workaround also includes a mechanism to restart the NAND read process from the next good block if an uncorrectable error (more than 4 bit errors) is detected on any page of a good block.  This workaround is implemented using a software patch that is loaded in device RAM at boot time and is designed to change the default behavior of the ECC Correct and Read functions in the RBL. The patch binary replaces function pointers to the ECC Correct and Read functions in the ROM function table, (defined in device internal memory), during boot. The patch binary will reside in page0 of the NAND block and so will be applied only after the page0 of a good block has been read.  Once the patch is read, all subsequent page reads in the block will use the new ECC  Correct and Read functions. ECC data errors on any page (other than page0) are ignored, any user data error (up to 4 bit errors total) is corrected and the boot process continues. If an uncorrectable error is detected on any page, the block is skipped and the boot process is restarted on the next good block. The behavior of the device boot from the NAND after application of the patch is shown in Figure 12.  SPRZ317G – August 2011 – Revised March 2014  OMAP-L132 C6000™ DSP+ARM® Processor Silicon Revisions 2.3, 2.1  31  Submit Documentation Feedback  Copyright © 2011–2014, Texas Instruments Incorporated    Silicon Revision 2.3 Usage Notes and Known Design Exceptions to Functional Specifications www.ti.com  (1)  All pages marked in green are good and all pages marked in red have "uncorrectable" errors.  Figure 12. D800K008 ROM Behavior With Software Patch Applied(1)  The software patch is available as a pre-built file with the latest version of the AIS tool that is used to generate the NAND flash boot image. The Using the OMAP-L132/L138  Bootloader Application Report (Literature number: SPRAB41) provides a link to the install package for the AIS tool which includes the following in the install directory: prebuilt patch files, the GUI AIS generation tool (AISGEN.exe, version 1.11 or later), command-line AIS generation tool and an example INI file.  Application of the Software Patch to NAND Boot Images:  •  For the GUI tool, AISGEN.exe version 1.11 or later (found in the install directory), the patch integrates the modified ECC Correct function into the user application file to generate one binary AIS file.  •  For the Command line AIS tool, HEXAIS_OMAP_L138.exe users (found in the install directory), the patch can be integrated into the user application file to generate one binary AIS file by inserting lines below to the end of the INI configuration file.  The patch name is: ARM_nand_ecc_patch_OMAP-L138.out  32  OMAP-L132 C6000™ DSP+ARM® Processor Silicon Revisions 2.3, 2.1  SPRZ317G – August 2011 – Revised March 2014  Submit Documentation Feedback  Copyright © 2011–2014, Texas Instruments Incorporated  www.ti.com  Silicon Revision 2.3 Usage Notes and Known Design Exceptions to Functional Specifications  [INPUTFILE] ; get the NAND ECC patch file  FILENAME=Patch_name.out  ; patch the NAND ECC handling routine  [AIS_Jump]  LOCATION=_NAND_ECC_patchApply  •  The patch will be burnt on page0, as it is in the head of AIS file. Once page0 has been read successfully, the AIS set command will overwrite the function pointer in the RBL with the modified function pointer and the modified function will be applied to the later pages read. Memory usage of the patch at boot time is as follows:  –  500 bytes at location 0xFFFF 0B00  Recommendations to Improve Robustness:  •  Page0 should be stored on multiple blocks as backup to take advantage of the safety mechanism built into Silicon Revision 2.1 to cycle to the next block when a page0  read fails in a good block.  •  Maintain backup boot images in multiple blocks. The patch to the Abort function reinitializes the boot process and forces the boot to cycle to the next good block and restart the boot process by reading from it.  •  Silicon Revision 2.1 supports booting from Block 0 of the flash which many NAND  manufacturers guarantee as a “more reliable” block than all other blocks. Hence, setting up boot to start from that Block 0 could help improve the reliability of boot.  This is a hardware change, requiring the bootmode pins BOOT[6:5] = 1x.  For more details on the bootmode pins, see the Using the OMAP-L132/L138  Bootloader Application Report (Literature number: SPRAB41), NAND-Boot Modes.  SPRZ317G – August 2011 – Revised March 2014  OMAP-L132 C6000™ DSP+ARM® Processor Silicon Revisions 2.3, 2.1  33  Submit Documentation Feedback  Copyright © 2011–2014, Texas Instruments Incorporated  Silicon Revision 2.3 Usage Notes and Known Design Exceptions to Functional Specifications www.ti.com      

-------------
Query: PMC: Slow Clock Selected in PMC and a Transition Occurs on PA1
NNs
Failure: 
3.5 Timer.1: In counter mode, the Timer Counter reset does not occur on the correct incoming edge Problem: Timer0 and Timer1 can be used in a counter mode. In this mode, the Timer Counter register can be incremented on rising, falling or both edges which occur on a selected CAP input pin. This counter mode can be combined with the match functionality to provide additional features. One of the features would be to reset the Timer Counter register on a match. The same would also apply for Timer1. Work-around: There are two possible workarounds: 1. Combine the Timer Counter reset feature with the âinterrupt on matchâ feature. The interrupt on match occurs on the correct incoming edge. In the ISR, the Timer Counter register can also be reset. This solution can only work if no edges are expected during the duration of the ISR. 2. In this solution, the âinterrupt on matchâ feature is not used. Instead, the following specific initialization can achieve the counting operation: a. Initialize the Timer Counter register to 0xFFFFFFFF. b. If ânâ edges have to be counted then initialize the corresponding Match register with value n-1. For instance, if 2 edges need to be counted then load the Match register with value 1. More details on the above example: 1. Edge 1 - Timer overflows and Timer Counter (TC) is set to 0. 2. Edge 2 - TC=1. Match takes place. 3. Edge 3 - TC=0. 4. Edge 4 - TC=1. Match takes place. 5. Edge 5 - TC=0. ES_LPC2220 . Â©   Rev. 2 â 1 April 2011 7 of 11  ES_LPC2220  LPC2220
Workaround: 


Failure: 
In word-wide frame-sync mode, if SSI_EN and TX/RX_EN are set near new frame start, SSI Receive and Transmit does not function properly and there is a chance of words getting missed/shifted or transmit data line being driven low for 1/2 clock cycles during the first frame.
Workaround: 
To ensure a gap of at least 2 bit-clock cycles between SSI_EN and TX/RX bit setting (only for External word-wide frame-sync patterns), here is an example code for this workaround. void ssi_transmit_receive_test() { //parameters defined here Statement1 (); //clock configuration here Statement2(); //AUDMUX configuration here Statement3(); //SSI configuration here Statement4(); //Enable SSI by programming SSI_SCR MEMWD(SSI2_SCR,scr_mask1); //delay some time for the SSI state machine to function //properly for(i=0;i<=5;i++); //Enable transmit and receive of SSI by programming //SSI_SCR MEMWD(SSI2_SCR,scr_mask2); ...... }

Failure: 
If CTS switches from 0 to 1 during the TX of a character and if the holding register (US_THR) is not empty, the content of US_THR will also be transmitted.
Workaround: 
Don't use the PDC in transmit mode and do not fill US_THR before TXEMPTY is set at 1.

Failure: 
When Hardware Handshaking is used and if CTS goes low near the end of the starting bit, a character can be lost.
Workaround: 
CTS must not go low during a time slot occurring between 2 Master Clock periods before the starting bit and 16 Master Clock periods after the rising edge of the starting bit.

Failure: 
3.2 Timer.1: In counter mode, the Timer Counter reset does not occur on the correct incoming edge 
Workaround: 


-------------
Query:  2.3.26  USB0: Early DMA Completion in DMA Receive Mode and More Than One Endpoint      is Transferring Data   
NNs
Failure: 
 3.0.26   USB0: Early DMA Completion in DMA Receive Mode and More Than One Endpoint      is Transferring Data   
Workaround: 
  The workaround involves monitoring transfer data size before and after transferring and reconfiguring data transfer size by software if the before and after size is different.  Software must keep tracking every endpoint data transferring size. When DMA  completion interrupt is received, software checks size difference. If the size is not equal, software requests the remaining data.  26  OMAP-L137 Silicon Revisions 3.0, 2.1, 2.0, 1.1, and 1.0  SPRZ291I – October 2008 – Revised June 2014  Submit Documentation Feedback   3.0 Usage Notes and Known Design Exceptions to Functional Specifications 

Failure: 
 2.3.26  USB0: Early DMA Completion in DMA Receive Mode and More Than One Endpoint  is Transferring Data  
Workaround: 
  The workaround involves monitoring transfer data size before and after transferring and reconfiguring data transfer size by software if the before and after size is different.  Software must keep tracking every endpoint data transferring size. When DMA  completion interrupt is received, software checks size difference. If the size is not equal, software requests the remaining data.  SPRZ301M – June 2009 – Revised March 2014  OMAP-L138 C6000 DSP+ARM® Processor Silicon Revisions 2.3, 2.1, 2.0,  39  Submit Documentation Feedback  1.1 and 1.0  Copyright © 2009–2014, Texas Instruments Incorporated  Silicon Revision 2.3 Usage Notes and Known Design Exceptions to Functional Specifications www.ti.com  

Failure: 
3.1 DMA.1: Single burst DMA memory-to-memory transfers have additional memory cycles when the DMA source memory is on the EMC bus 
Workaround: 
 When interfacing an external peripheral device that does not support burst mode access through the EMC Static Memory interface the following work-arounds are recommended: 1. Avoid using DMA to transfer read blocks of data from the external device. Instead use a software loop with LDR instruction to read blocks of data from the external device. 2. If DMA can't be avoided, ensure there is at least one unused address between the highest address used for the external device DMA data buffer and any status or control register in the device that will initiate any unwanted action just by reading from the register (i.e. clear an interrupt or status). 

Failure: 
When loading the TWI_RHR, the transfer direction is ignored. The last data byte received in the TWI_RHR is corrupted at the end of the first subsequent transmit data byte . Neither RXRDY nor OVERRUN status bits are set if
Workaround: 
The user must be sure that received data is read before transmitting any new data. 40.11.12 USART: Universal Synchronous Asynchronous Receiver Transmitter

Failure: 
In word-wide frame-sync mode, if SSI_EN and TX/RX_EN are set near new frame start, SSI Receive and Transmit does not function properly and there is a chance of words getting missed/shifted or transmit data line being driven low for 1/2 clock cycles during the first frame.
Workaround: 
To ensure a gap of at least 2 bit-clock cycles between SSI_EN and TX/RX bit setting (only for External word-wide frame-sync patterns), here is an example code for this workaround. void ssi_transmit_receive_test() { //parameters defined here Statement1 (); //clock configuration here Statement2(); //AUDMUX configuration here Statement3(); //SSI configuration here Statement4(); //Enable SSI by programming SSI_SCR MEMWD(SSI2_SCR,scr_mask1); //delay some time for the SSI state machine to function //properly for(i=0;i<=5;i++); //Enable transmit and receive of SSI by programming //SSI_SCR MEMWD(SSI2_SCR,scr_mask2); ...... }

-------------
Query: V DDBU Consumption is not guaranteed
NNs
Failure: 
V DDCORE Current Consumption when PLL is not Used
Workaround: 
At start-up, set the PLL on (set MUL at 2 and PLLCOUNT at 2, for example), wait for the PLL LOCK and then disable the PLL (MUL = 0).

Failure: 
3.8 Ethernet.3: Receive Status registers will not function correctly if RxDescriptor number is greater than 4 
Workaround: 
 Define 4 or less in the Receive number of Descriptors register. ES_LPC2364_66_68 . Â© NXP B.V. 2012. All rights reserved.  Rev. 9.1 â 1 July 2012 10 of 20  ES_LPC2364_66_68  LPC2364/66/68 

Failure: 
3.18 VBAT.1: Increased power consumption on VBAT when VBAT is powered before the 3.3 V supply used by rest of the device 
Workaround: 
 Provide 3.3 V supply used by rest of the device first and then provide VBAT voltage. 

Failure: 
If Sleep mode is activated while there is no activity (no conversion is being performed), it will take effect only after
Workaround: 
To activate sleep mode as soon as possible, it is recommended to write successively, ADC Mode Register (SLEEP) then ADC Control Register (START bit field); to start an analog-to-digital conversion, in order put ADC into sleep mode at the end of this conversion. SAM7S Series [DATASHEET] 6175MâATARMâ26-Oct-12 647 40.11.3 Master Clock (MCK)

Failure: 
3.7 Vdd.1: Device may not work properly under increased power consumption conditions 
Workaround: 
 Increase the voltage on Vdd1V8 to 1.95 V. It is not harmful to the device if this voltage reaches 2 V. 

-------------
Query:  1.1.16  Vil on 3.3V LVCMOS Input Buffers  
NNs
Failure: 
 2.3.9   Vil on Dual-Voltage LVCMOS Input Buffers Operated at 3.3V  
Workaround: 
  Although there is no specific workaround, the following recommendations can be used to help prevent this issue:  •  Minimize loads as much as possible, especially DC loads that could cause the Vil to rise. Point-to-point (single-load) connections are unlikely to be affected.  •  Falling edges should transition as rapidly as possible (so the signal passes through the 0.2V point as early as possible). Heavily loaded nodes resulting in degraded fall times may require drivers to provide rapid input edges.  SPRZ317G – August 2011 – Revised March 2014  OMAP-L132 C6000™ DSP+ARM® Processor Silicon Revisions 2.3, 2.1  15  Submit Documentation Feedback  Copyright © 2011–2014, Texas Instruments Incorporated  Silicon Revision 2.3 Usage Notes and Known Design Exceptions to Functional Specifications www.ti.com      

Failure: 
 2.3.9  Vil on Dual-Voltage LVCMOS Input Buffers Operated at 3.3V  
Workaround: 
  Although there is no specific workaround, the following recommendations can be used to help prevent this issue:  •  Minimize loads as much as possible, especially DC loads that could cause the Vil to rise. Point-to-point (single-load) connections are unlikely to be affected.  •  Falling edges should transition as rapidly as possible (so the signal passes through the 0.2V point as early as possible). Heavily loaded nodes resulting in degraded fall times may require drivers to provide rapid input edges.  SPRZ301M – June 2009 – Revised March 2014  OMAP-L138 C6000 DSP+ARM® Processor Silicon Revisions 2.3, 2.1, 2.0,  17  Submit Documentation Feedback  1.1 and 1.0  Copyright © 2009–2014, Texas Instruments Incorporated  Silicon Revision 2.3 Usage Notes and Known Design Exceptions to Functional Specifications www.ti.com  

Failure: 
41.2.1 Using Receive frames and buffers not word-aligned
Workaround: 
The software workaround is to disable and re-enable the receive function in the network function register ETH_CTL each time a buffer is not available (RBNA in the status register). ETH CTL &= ~0x00000004 ; ETH CTL |= 0x00000004 ; Note that an interrupt can be activated for the RBNA detection. Another workaround is to align the address of the receive buffer descriptor on a boundary of 16 Words (address Oxaaaa aaOO, Oxaaaa aa40, Oxaaaa aa80, ..... ) 41.3 MCI

Failure: 
3.3 ADC.1: External sync inputs not operational 
Workaround: 
 In software-controlled mode (BURST bit is 0), the START conversion options (bits 26:24 set to 0x1 or 0x4 or 0x5 or 0x6 or 0x7) can be used. The user can also start a conversion by connecting an external trigger signal to a capture input pin (CAPx) from a Timer peripheral to generate an interrupt. The timer interrupt routine can then start the ADC conversion by setting the START bits (26:24) to 0x1. The trigger can also be generated from a timer match register.

Failure: 
3.1 ADC.1: External sync inputs not operational 
Workaround: 
 In software-controlled mode (BURST bit is 0), the START conversion options (bits 26:24 set to 0x1 or 0x4 or 0x5 or 0x6 or 0x7) can be used. The user can also start a conversion by connecting an external trigger signal to a capture input pin (CAPx) from a Timer peripheral to generate an interrupt. The timer interrupt routine can then start the ADC conversion by setting the START bits (26:24) to 0x1. The trigger can also be generated from a timer match register. ES_LPC2470_78 . Â© NXP B.V. 2012. All rights reserved.  Rev. 8.1 â 1 July 2012 5 of 13  ES_LPC2470_78  LPC2470/78 

-------------
Query: 41.3.1 Data Endianess inversion from the MCI to MMC or SD Card
NNs
Failure: 
Cannot support NAND Flash memory requiring CE_B pin held low during tR (data transfer from cell to register) period.
Workaround: 
This can be accomplished through the use of an external AND gate, where the NFCE and NFRB signals of the i.MX21 are inputs to the AND gate and the output is connected to the CE_B input of the NAND Flash device.

Failure: 
 3.0.25  USB0: CPU gets Stale Receive Data from the Data Buffer located in External      Memory   
Workaround: 
  Initialize the datalength descriptor field to zero. CPPI DMA updates this field after the completion of an RX DMA operation with the actual number of bytes received. In the ISR  (actually in a deferred call context), poll this field until it becomes a non-zero value to ensure data buffer has been updated with actual data. The descriptor buffer write is posted after the data buffer write, so waiting for the descriptor field to be updated ensures the data buffer has been updated. Since this workaround involves deferred  procedure calls (whose schedule can be delayed depending on OS load), the latency  sensitive application (like ISO Audio) might be affected by delay in notification to the application.  SPRZ291I – October 2008 – Revised June 2014  OMAP-L137 Silicon Revisions 3.0, 2.1, 2.0, 1.1, and 1.0  25  Submit Documentation Feedback   3.0 Usage Notes and Known Design Exceptions to Functional Specifications www.ti.com      

Failure: 
 2.3.25   USB0: CPU gets Stale Receive Data from the Data Buffer located in External      Memory   
Workaround: 
  Initialize the datalength descriptor field to zero. CPPI DMA updates this field after the completion of an RX DMA operation with the actual number of bytes received. In the ISR  (actually in a deferred call context), poll this field until it becomes a non-zero value to ensure data buffer has been updated with actual data. The descriptor buffer write is posted after the data buffer write, so waiting for the descriptor field to be updated ensures the data buffer has been updated. Since this workaround involves deferred procedure calls (whose schedule can be delayed depending on OS load), the latency sensitive application (like ISO Audio) might be affected by delay in notification to the application.  34  OMAP-L132 C6000™ DSP+ARM® Processor Silicon Revisions 2.3, 2.1  SPRZ317G – August 2011 – Revised March 2014  Submit Documentation Feedback  Copyright © 2011–2014, Texas Instruments Incorporated  www.ti.com  Silicon Revision 2.3 Usage Notes and Known Design Exceptions to Functional Specifications 

Failure: 
 2.3.25  USB0: CPU gets Stale Receive Data from the Data Buffer located in External  Memory  
Workaround: 
  Initialize the datalength descriptor field to zero. CPPI DMA updates this field after the completion of an RX DMA operation with the actual number of bytes received. In the ISR  (actually in a deferred call context), poll this field until it becomes a non-zero value to ensure data buffer has been updated with actual data. The descriptor buffer write is posted after the data buffer write, so waiting for the descriptor field to be updated ensures the data buffer has been updated. Since this workaround involves deferred  procedure calls (whose schedule can be delayed depending on OS load), the latency  sensitive application (like ISO Audio) might be affected by delay in notification to the application.  38  OMAP-L138 C6000 DSP+ARM® Processor Silicon Revisions 2.3, 2.1, 2.0,  SPRZ301M – June 2009 – Revised March 2014  1.1 and 1.0  Submit Documentation Feedback  Copyright © 2009–2014, Texas Instruments Incorporated  www.ti.com  Silicon Revision 2.3 Usage Notes and Known Design Exceptions to Functional Specifications 

Failure: 
3.2 MAM.1: Incorrect read of data from SRAM after Reset and MAM is not enabled or partially enabled 
Workaround: 
 User code should enable the MAM after Reset and before any RAM accesses; this means MAMTIM and MAMCR should be set as follows: MAMTIM: For CPU clock frequencies slower than 20 MHz, set MAMTIM to 0x01. For CPU clock frequencies between 20 MHz and 40 MHz, set MAMTIM to 0x02, and for values above 40 MHz set MAMTIM to 0x03. MAMCR: Set MAMCR to 0x02 (MAM functions fully enabled) MAMTIM should be written before MAMCR. 

-------------
Query: The DMA DISR register may be cleared accidentally when trying to clear any interrupt in the DISR register
NNs
Failure: 
It is necessary to use a  separate timer to prevent access  to the SyncFlash immediately after  the SyncFlash is re-enabled from  deep low-power mode
Workaround: 
 Use the TIMER register to count 100 Î¼s to determine the time  period during which the user is not allowed to access the  SyncFlash. 

Failure: 
When loading the TWI_RHR, the transfer direction is ignored. The last data byte received in the TWI_RHR is corrupted at the end of the first subsequent transmit data byte . Neither RXRDY nor OVERRUN status bits are set if
Workaround: 
The user must be sure that received data is read before transmitting any new data. 40.11.12 USART: Universal Synchronous Asynchronous Receiver Transmitter

Failure: 
PXP: The HW_PXP_CSCCOEFF2_C3 register can not be reset correctly under some PVT corner
Workaround: 
Always write the HW_PXP_CSCCOEFF2_C3 register with the expected value before using it. The PXP_CSCCOEFF2 register address is 0x8002A0F0.

Failure: 
3.5 Timer.1: In counter mode, the Timer Counter reset does not occur on the correct incoming edge Problem: Timer0 and Timer1 can be used in a counter mode. In this mode, the Timer Counter register can be incremented on rising, falling or both edges which occur on a selected CAP input pin. This counter mode can be combined with the match functionality to provide additional features. One of the features would be to reset the Timer Counter register on a match. The same would also apply for Timer1. Work-around: There are two possible workarounds: 1. Combine the Timer Counter reset feature with the âinterrupt on matchâ feature. The interrupt on match occurs on the correct incoming edge. In the ISR, the Timer Counter register can also be reset. This solution can only work if no edges are expected during the duration of the ISR. 2. In this solution, the âinterrupt on matchâ feature is not used. Instead, the following specific initialization can achieve the counting operation: a. Initialize the Timer Counter register to 0xFFFFFFFF. b. If ânâ edges have to be counted then initialize the corresponding Match register with value n-1. For instance, if 2 edges need to be counted then load the Match register with value 1. More details on the above example: 1. Edge 1 - Timer overflows and Timer Counter (TC) is set to 0. 2. Edge 2 - TC=1. Match takes place. 3. Edge 3 - TC=0. 4. Edge 4 - TC=1. Match takes place. 5. Edge 5 - TC=0. ES_LPC2220 . Â©   Rev. 2 â 1 April 2011 7 of 11  ES_LPC2220  LPC2220
Workaround: 


Failure: 
If CTS switches from 0 to 1 during the TX of a character and if the holding register (US_THR) is not empty, the content of US_THR will also be transmitted.
Workaround: 
Don't use the PDC in transmit mode and do not fill US_THR before TXEMPTY is set at 1.

-------------
Query: 41.3.11 Data write operation and number of bytes
NNs
Failure: 
43.2.5.4 MCI: Data Write Operation and Number of Bytes
Workaround: 
The PDC counters must always be equal to 12 bytes for data transfers lower than 12 bytes. The BLKLEN or BCNT field are used to specify the real count number.

Failure: 
44.2.2.4 MCI: Data Write Operation and number of bytes
Workaround: 
The PDC counters must always be equal to 12 bytes for data transfers lower than 12 bytes. The BLKLEN or BCNT field are used to specify the real count number.

Failure: 
When loading the TWI_RHR, the transfer direction is ignored. The last data byte received in the TWI_RHR is corrupted at the end of the first subsequent transmit data byte . Neither RXRDY nor OVERRUN status bits are set if
Workaround: 
The user must be sure that received data is read before transmitting any new data. 40.11.12 USART: Universal Synchronous Asynchronous Receiver Transmitter

Failure: 
Limitation on using DMA  for USBD IN data transfer.  There is a limitation on using DMA  to transfer continuous data from  memory to a 64-byte USBD FIFO  (FIFO1 and FIFO2) when using a  short packet (<37 bytes) followed  by a long packet (> 32 bytes).  For example: A 6 byte packet  followed by a 64 byte packet, or a  32 byte packet followed by a 40  byte packet such that the short  packet length + the long packet  length is greater than 64 bytes  (FIFO depth).
Workaround: 
 Two methods are used to prevent this limitation depending on  the data packet size:  1. For data packet sizes of less than 5 bytes:  After the short packet data transfer, software must poll the  USBD BYTE_COUNT==0 before initiating the next DMA  transfer. This ensures that FIFO can accept the next long  data packet of 64-bytes.  2. For data packet sizes of 5 bytes and greater:  Use a 32-byte FIFO instead of a 64-byte FIFO to ensure that  the DMA request is cleared. The granularity bits GR[2:0] must  be set to 111. 

Failure: 
Standby current at QVDD and NVDD is higher than the typical value specified in data sheet.
Workaround: 
No workaround is available.

-------------
Query: ADC: GOVRE Bit is not Updated
NNs
Failure: 
43.1.1.5 ADC: GOVRE Bit is Not Updated
Workaround: 
None 790 SAM926O [DATASHEET] AtmeL Almel-6221 M-ATARM-SAMQZSO-DatasheetJ 3-Jan-16

Failure: 
43.2.1.5 ADC: GOVRE Bit is Not Updated
Workaround: 
None

Failure: 
43.2.1.6 ADC: GOVRE Bit is Not Set when Reading CDR
Workaround: 
None

Failure: 
43.1.1.6 ADC: GOVRE Bit is Not Set when Reading CDR
Workaround: 
None

Failure: 
43.2.1.7 ADC: GOVRE Bit is Not Set when Disabling a Channel
Workaround: 
None

-------------
Query: PWM: Counter Start Value
NNs
Failure: 
PWM: Constraints on Duty Cycle Value
Workaround: 
Do not set PWM_CDTYx at 0 in center aligned mode. Do not set PWM_CDTYx at 0 or 1 in left aligned mode.

Failure: 
3.2 Timer.1: In counter mode, the Timer Counter reset does not occur on the correct incoming edge 
Workaround: 


Failure: 
PWM: Register write sync issue when HSADC clock frequency is lower than APBX clock frequency
Workaround: 
If the HSADC input clock is lower than the 24 MHz APBX bus clock the APBX bus clock should be set to a lower frequency before every write to the PWM register. When the write access finishes, the APBX clock can be set back to normal.

Failure: 
3.5 Timer.1: In counter mode, the Timer Counter reset does not occur on the correct incoming edge Problem: Timer0 and Timer1 can be used in a counter mode. In this mode, the Timer Counter register can be incremented on rising, falling or both edges which occur on a selected CAP input pin. This counter mode can be combined with the match functionality to provide additional features. One of the features would be to reset the Timer Counter register on a match. The same would also apply for Timer1. Work-around: There are two possible workarounds: 1. Combine the Timer Counter reset feature with the âinterrupt on matchâ feature. The interrupt on match occurs on the correct incoming edge. In the ISR, the Timer Counter register can also be reset. This solution can only work if no edges are expected during the duration of the ISR. 2. In this solution, the âinterrupt on matchâ feature is not used. Instead, the following specific initialization can achieve the counting operation: a. Initialize the Timer Counter register to 0xFFFFFFFF. b. If ânâ edges have to be counted then initialize the corresponding Match register with value n-1. For instance, if 2 edges need to be counted then load the Match register with value 1. More details on the above example: 1. Edge 1 - Timer overflows and Timer Counter (TC) is set to 0. 2. Edge 2 - TC=1. Match takes place. 3. Edge 3 - TC=0. 4. Edge 4 - TC=1. Match takes place. 5. Edge 5 - TC=0. ES_LPC2220 . Â©   Rev. 2 â 1 April 2011 7 of 11  ES_LPC2220  LPC2220
Workaround: 


Failure: 
3.9 MCPWM.1: Input pins (MCI0-2) on the Motor Control PWM peripheral are not functional 
Workaround: 
 The GPIO interrupts1 need to be used instead of the MCPWM MCI0-2 pins. On the LPC3250, the GPIO interrupts can only be set to either trigger on the rising edge or on the falling edge. Therefore, in order to detect all six states of the connected hall sensor through an interrupt, the state of the pin needs to be determined and switch to rising or falling edge interrupt accordingly. 1. Available GPIO interrupt pins: GPIO_00 to GPIO_05, GPI_00 to GPI_09, GPI_19, GPI_28, and all port 0 and port 1 pins. ES_LPC3250 . Â©   Rev. 9 â 1 June 2011 13 of 17  ES_LPC3250  LPC3250 

-------------
Query: 41.11.4 Bad capture at restart if burst low
NNs
Failure: 
41.11.1 Wrong Compare at restart if burst low
Workaround: 
None. 688 AT91RM9200 [DATASHEET] AtmeL Almel-1768J-ATARM-AT91 RM9200-Datasheet_03-Marâ1 G

Failure: 
41.11.3 Erroneous capture with burst low
Workaround: 
None.

Failure: 
When Hardware Handshaking is used and if CTS goes low near the end of the starting bit, a character can be lost.
Workaround: 
CTS must not go low during a time slot occurring between 2 Master Clock periods before the starting bit and 16 Master Clock periods after the rising edge of the starting bit.

Failure: 
In word-wide frame-sync mode, if SSI_EN and TX/RX_EN are set near new frame start, SSI Receive and Transmit does not function properly and there is a chance of words getting missed/shifted or transmit data line being driven low for 1/2 clock cycles during the first frame.
Workaround: 
To ensure a gap of at least 2 bit-clock cycles between SSI_EN and TX/RX bit setting (only for External word-wide frame-sync patterns), here is an example code for this workaround. void ssi_transmit_receive_test() { //parameters defined here Statement1 (); //clock configuration here Statement2(); //AUDMUX configuration here Statement3(); //SSI configuration here Statement4(); //Enable SSI by programming SSI_SCR MEMWD(SSI2_SCR,scr_mask1); //delay some time for the SSI state machine to function //properly for(i=0;i<=5;i++); //Enable transmit and receive of SSI by programming //SSI_SCR MEMWD(SSI2_SCR,scr_mask2); ...... }

Failure: 
3.5 Timer.1: In counter mode, the Timer Counter reset does not occur on the correct incoming edge Problem: Timer0 and Timer1 can be used in a counter mode. In this mode, the Timer Counter register can be incremented on rising, falling or both edges which occur on a selected CAP input pin. This counter mode can be combined with the match functionality to provide additional features. One of the features would be to reset the Timer Counter register on a match. The same would also apply for Timer1. Work-around: There are two possible workarounds: 1. Combine the Timer Counter reset feature with the âinterrupt on matchâ feature. The interrupt on match occurs on the correct incoming edge. In the ISR, the Timer Counter register can also be reset. This solution can only work if no edges are expected during the duration of the ISR. 2. In this solution, the âinterrupt on matchâ feature is not used. Instead, the following specific initialization can achieve the counting operation: a. Initialize the Timer Counter register to 0xFFFFFFFF. b. If ânâ edges have to be counted then initialize the corresponding Match register with value n-1. For instance, if 2 edges need to be counted then load the Match register with value 1. More details on the above example: 1. Edge 1 - Timer overflows and Timer Counter (TC) is set to 0. 2. Edge 2 - TC=1. Match takes place. 3. Edge 3 - TC=0. 4. Edge 4 - TC=1. Match takes place. 5. Edge 5 - TC=0. ES_LPC2220 . Â©   Rev. 2 â 1 April 2011 7 of 11  ES_LPC2220  LPC2220
Workaround: 


-------------
Query: 3.5 ADC.4: Global power down does not power down the ADC 
NNs
Failure: 
3.18 VBAT.1: Increased power consumption on VBAT when VBAT is powered before the 3.3 V supply used by rest of the device 
Workaround: 
 Provide 3.3 V supply used by rest of the device first and then provide VBAT voltage. 

Failure: 
4.2 VBAT.1: Increased power consumption on the VBAT pin when the VDD(1V8) core pin is left floating 
Workaround: 
 VDD(1V8) core pin must always be connected to its power supply or to ground.

Failure: 
3.5 Timer.1: In counter mode, the Timer Counter reset does not occur on the correct incoming edge Problem: Timer0 and Timer1 can be used in a counter mode. In this mode, the Timer Counter register can be incremented on rising, falling or both edges which occur on a selected CAP input pin. This counter mode can be combined with the match functionality to provide additional features. One of the features would be to reset the Timer Counter register on a match. The same would also apply for Timer1. Work-around: There are two possible workarounds: 1. Combine the Timer Counter reset feature with the âinterrupt on matchâ feature. The interrupt on match occurs on the correct incoming edge. In the ISR, the Timer Counter register can also be reset. This solution can only work if no edges are expected during the duration of the ISR. 2. In this solution, the âinterrupt on matchâ feature is not used. Instead, the following specific initialization can achieve the counting operation: a. Initialize the Timer Counter register to 0xFFFFFFFF. b. If ânâ edges have to be counted then initialize the corresponding Match register with value n-1. For instance, if 2 edges need to be counted then load the Match register with value 1. More details on the above example: 1. Edge 1 - Timer overflows and Timer Counter (TC) is set to 0. 2. Edge 2 - TC=1. Match takes place. 3. Edge 3 - TC=0. 4. Edge 4 - TC=1. Match takes place. 5. Edge 5 - TC=0. ES_LPC2220 . Â©   Rev. 2 â 1 April 2011 7 of 11  ES_LPC2220  LPC2220
Workaround: 


Failure: 
3.7 Vdd.1: Device may not work properly under increased power consumption conditions 
Workaround: 
 Increase the voltage on Vdd1V8 to 1.95 V. It is not harmful to the device if this voltage reaches 2 V. 

Failure: 
If CTS switches from 0 to 1 during the TX of a character and if the holding register (US_THR) is not empty, the content of US_THR will also be transmitted.
Workaround: 
Don't use the PDC in transmit mode and do not fill US_THR before TXEMPTY is set at 1.

-------------
Query: ADC: Sleep Mode
NNs
Failure: 
43.2.1.11 ADc: Sleep Mode
Workaround: 
To activate sleep mode as soon as possible, it is recommended to write successively, ADC Mode Register (SLEEP) then ADC Control Register (START bit ï¬eld); to start an analog-toâdigital conversion, in order put ADC into sleep mode at the end of this conversion. 43.2.2 Bus Matrix

Failure: 
43.1.1.11 ADC: Sleep Mode
Workaround: 
To activate sleep mode as soon as possible, it is recommended to write successively, ADC Mode Register (SLEEP) then ADC Control Register (START bit ï¬eld); to start an analog-toâdigital conversion, in order put ADC into sleep mode at the end of this conversion. AtmeL SAM926O [DATASHEET] 791 AtmeIâ6221M-ATARM-SAMQZSO-Datasheet_13-Jan-16 43.1.2 Boot ROM

Failure: 
44.2.1.1 ADC: Sleep Mode
Workaround: 
To activate sleep mode as soon as possible, it is recommended to write successively, ADC Mode Register (SLEEP) then ADC Control Register (START bit field); to start an analog-to-digi- tal conversion, in order put ADC into sleep mode at the end of this conversion. 44.2.2 MCI

Failure: 
3.20 CAN.2: No wake-up from CAN sleep mode using SM bit 
Workaround: 
 None, the SM bit cannot be used as a source of CAN wakeup. ES_LPC2109_19_29_00 . Â©   Rev. 3 â 1 April 2011 15 of 25  ES_LPC21x9; LPC21x9/00  LPC21x9; LPC21x9/00 

Failure: 
43.2.1.5 ADC: GOVRE Bit is Not Updated
Workaround: 
None

-------------
Query: 43.1.11.4 SSC: Periodic Transmission Limitations in Master Mode
NNs
Failure: 
SSC: Periodic Transmission Limitations in Master Mode
Workaround: 
None.

Failure: 
43.2.9.4 SSC: Periodic Transmission Limitations in Master Mode
Workaround: 
None. 43.2.10 Shutdown Controller (SHDWC)

Failure: 
44.2.5.4 SSC: Periodic Transmission Limitations in Master Mode
Workaround: 
None. 44.2.6 System Controller (SYSC)

Failure: 
43.1.11.3 SSC: Transmitter Limitations in Slave Mode
Workaround: 
None.

Failure: 
SSC: Transmitter Limitations in Slave Mode
Workaround: 
None.

-------------
Query: 3.2 NOR.1: When booting from NOR flash, SDRAM devices will not release the data bus, preventing the LPC3250 from booting correctly 
NNs
Failure: 
3.2 NOR.1: When booting from NOR flash, SDRAM devices will not release the data bus, preventing the LPC3220 from booting correctly 
Workaround: 
 Since this issue only occurs with NOR FLASH, using one of the other boot methods such as NAND or SPI FLASH boot is a good workaround for the issue. If booting from NOR FLASH is a requirement, the simple circuit shown in Figure 3 can be used to clear the SDRAM state at system reset. This will not change the normal functioning of the LPC3220 EMC or SDRAM operations. If SDRAM devices are also present on the 2nd SDRAM chip select, a similar circuit will be needed for those devices using EMC_CKE1. ES_LPC3220 . Â©   Rev. 9 â 1 June 2011 6 of 16  ES_LPC3220  LPC3220 Fig 3. 128 MB DDR SDRAM example ES_LPC3220 . Â©   Rev. 9 â 1 June 2011 7 of 16  ES_LPC3220  LPC3220 

Failure: 
3.2 NOR.1: When booting from NOR flash, SDRAM devices will not release the data bus, preventing the LPC3240 from booting correctly 
Workaround: 
 Since this issue only occurs with NOR FLASH, using one of the other boot methods such as NAND or SPI FLASH boot is a good workaround for the issue. If booting from NOR FLASH is a requirement, the simple circuit shown in Figure 3 can be used to clear the SDRAM state at system reset. This will not change the normal functioning of the LPC3240 EMC or SDRAM operations. If SDRAM devices are also present on the 2nd SDRAM chip select, a similar circuit will be needed for those devices using EMC_CKE1. ES_LPC3240 . Â©   Rev. 9 â 1 June 2011 7 of 17  ES_LPC3240  LPC3240 Fig 3. 128 MB DDR SDRAM example 

Failure: 
3.2 MAM.1: Incorrect read of data from SRAM after Reset and MAM is not enabled or partially enabled 
Workaround: 
 User code should enable the MAM after Reset and before any RAM accesses; this means MAMTIM and MAMCR should be set as follows: MAMTIM: For CPU clock frequencies slower than 20 MHz, set MAMTIM to 0x01. For CPU clock frequencies between 20 MHz and 40 MHz, set MAMTIM to 0x02, and for values above 40 MHz set MAMTIM to 0x03. MAMCR: Set MAMCR to 0x02 (MAM functions fully enabled) MAMTIM should be written before MAMCR. 

Failure: 
Cannot support NAND Flash memory requiring CE_B pin held low during tR (data transfer from cell to register) period.
Workaround: 
This can be accomplished through the use of an external AND gate, where the NFCE and NFRB signals of the i.MX21 are inputs to the AND gate and the output is connected to the CE_B input of the NAND Flash device.

Failure: 
In word-wide frame-sync mode, if SSI_EN and TX/RX_EN are set near new frame start, SSI Receive and Transmit does not function properly and there is a chance of words getting missed/shifted or transmit data line being driven low for 1/2 clock cycles during the first frame.
Workaround: 
To ensure a gap of at least 2 bit-clock cycles between SSI_EN and TX/RX bit setting (only for External word-wide frame-sync patterns), here is an example code for this workaround. void ssi_transmit_receive_test() { //parameters defined here Statement1 (); //clock configuration here Statement2(); //AUDMUX configuration here Statement3(); //SSI configuration here Statement4(); //Enable SSI by programming SSI_SCR MEMWD(SSI2_SCR,scr_mask1); //delay some time for the SSI state machine to function //properly for(i=0;i<=5;i++); //Enable transmit and receive of SSI by programming //SSI_SCR MEMWD(SSI2_SCR,scr_mask2); ...... }

-------------
Query: The LCD flicker issue is not completely resolved by the use of dummy DMA transfer (See Erratum number 7). The LCDC DMA high/low setting does not ensure that the next bus request is triggered in the event the current DMA burst is not completed. The problem occurs when the next bus request is initiated while the LCDC is waiting for the last data in the current DMA burst. This is because when the LCDC is waiting for the last data, it only expects an HREADY signal to be asserted. So, if the next bus request is triggered while the LCDC is waiting, the bus request will be missed. A data fetch can not be initiated while data in FIFO is being continuously drained so an under-run will eventually occur. In Summary: If the next bus request is issued when the LCDC is waiting for the last data in the current DMA burst it will not be recognized.
NNs
Failure: 
When loading the TWI_RHR, the transfer direction is ignored. The last data byte received in the TWI_RHR is corrupted at the end of the first subsequent transmit data byte . Neither RXRDY nor OVERRUN status bits are set if
Workaround: 
The user must be sure that received data is read before transmitting any new data. 40.11.12 USART: Universal Synchronous Asynchronous Receiver Transmitter

Failure: 
The XOFF character is sent only when the receive buffer is detected full. While the XOFF is being sent, the remote
Workaround: 
None.

Failure: 
When Hardware Handshaking is used and if CTS goes low near the end of the starting bit, a character can be lost.
Workaround: 
CTS must not go low during a time slot occurring between 2 Master Clock periods before the starting bit and 16 Master Clock periods after the rising edge of the starting bit.

Failure: 
If CTS switches from 0 to 1 during the TX of a character and if the holding register (US_THR) is not empty, the content of US_THR will also be transmitted.
Workaround: 
Don't use the PDC in transmit mode and do not fill US_THR before TXEMPTY is set at 1.

Failure: 
In word-wide frame-sync mode, if SSI_EN and TX/RX_EN are set near new frame start, SSI Receive and Transmit does not function properly and there is a chance of words getting missed/shifted or transmit data line being driven low for 1/2 clock cycles during the first frame.
Workaround: 
To ensure a gap of at least 2 bit-clock cycles between SSI_EN and TX/RX bit setting (only for External word-wide frame-sync patterns), here is an example code for this workaround. void ssi_transmit_receive_test() { //parameters defined here Statement1 (); //clock configuration here Statement2(); //AUDMUX configuration here Statement3(); //SSI configuration here Statement4(); //Enable SSI by programming SSI_SCR MEMWD(SSI2_SCR,scr_mask1); //delay some time for the SSI state machine to function //properly for(i=0;i<=5;i++); //Enable transmit and receive of SSI by programming //SSI_SCR MEMWD(SSI2_SCR,scr_mask2); ...... }

-------------
Query: NFC (Nand Flash Controller) fails to correct two single-bit errors if they occur on consecutive pages, on data read accesses.
NNs
Failure: 
3.5 Timer.1: In counter mode, the Timer Counter reset does not occur on the correct incoming edge Problem: Timer0 and Timer1 can be used in a counter mode. In this mode, the Timer Counter register can be incremented on rising, falling or both edges which occur on a selected CAP input pin. This counter mode can be combined with the match functionality to provide additional features. One of the features would be to reset the Timer Counter register on a match. The same would also apply for Timer1. Work-around: There are two possible workarounds: 1. Combine the Timer Counter reset feature with the âinterrupt on matchâ feature. The interrupt on match occurs on the correct incoming edge. In the ISR, the Timer Counter register can also be reset. This solution can only work if no edges are expected during the duration of the ISR. 2. In this solution, the âinterrupt on matchâ feature is not used. Instead, the following specific initialization can achieve the counting operation: a. Initialize the Timer Counter register to 0xFFFFFFFF. b. If ânâ edges have to be counted then initialize the corresponding Match register with value n-1. For instance, if 2 edges need to be counted then load the Match register with value 1. More details on the above example: 1. Edge 1 - Timer overflows and Timer Counter (TC) is set to 0. 2. Edge 2 - TC=1. Match takes place. 3. Edge 3 - TC=0. 4. Edge 4 - TC=1. Match takes place. 5. Edge 5 - TC=0. ES_LPC2220 . Â©   Rev. 2 â 1 April 2011 7 of 11  ES_LPC2220  LPC2220
Workaround: 


Failure: 
Cannot support NAND Flash memory requiring CE_B pin held low during tR (data transfer from cell to register) period.
Workaround: 
This can be accomplished through the use of an external AND gate, where the NFCE and NFRB signals of the i.MX21 are inputs to the AND gate and the output is connected to the CE_B input of the NAND Flash device.

Failure: 
The Memory Controller  arbiter (MEMC) does not break  and release the ARMâ¢ coreâs  back-to-back burst access to the  other (for example, LCDC, DMA,  and MMA) bus masters. In this  situation, the ARM coreâs back-toback access does not use an IDLE  cycle as a separator.
Workaround: 
 Use a dummy DMA transfer to and from a dummy memory  space to force the MEMC to release the bus for other bus  masters. For more detailed information and code example,  please visit our website www.freescale.com/imx. 

Failure: 
In word-wide frame-sync mode, if SSI_EN and TX/RX_EN are set near new frame start, SSI Receive and Transmit does not function properly and there is a chance of words getting missed/shifted or transmit data line being driven low for 1/2 clock cycles during the first frame.
Workaround: 
To ensure a gap of at least 2 bit-clock cycles between SSI_EN and TX/RX bit setting (only for External word-wide frame-sync patterns), here is an example code for this workaround. void ssi_transmit_receive_test() { //parameters defined here Statement1 (); //clock configuration here Statement2(); //AUDMUX configuration here Statement3(); //SSI configuration here Statement4(); //Enable SSI by programming SSI_SCR MEMWD(SSI2_SCR,scr_mask1); //delay some time for the SSI state machine to function //properly for(i=0;i<=5;i++); //Enable transmit and receive of SSI by programming //SSI_SCR MEMWD(SSI2_SCR,scr_mask2); ...... }

Failure: 
3.2 MAM.1: Incorrect read of data from SRAM after Reset and MAM is not enabled or partially enabled 
Workaround: 
 User code should enable the MAM after Reset and before any RAM accesses; this means MAMTIM and MAMCR should be set as follows: MAMTIM: For CPU clock frequencies slower than 20 MHz, set MAMTIM to 0x01. For CPU clock frequencies between 20 MHz and 40 MHz, set MAMTIM to 0x02, and for values above 40 MHz set MAMTIM to 0x03. MAMCR: Set MAMCR to 0x02 (MAM functions fully enabled) MAMTIM should be written before MAMCR. 

-------------
Query: PIO: Electrical Characteristics on NRST and PA0-PA16 and PA21-31
NNs
Failure: 
PIO: Drive Low NRST, PA0-PA16 and PA21-PA31
Workaround: 
Output impedance must be lower than 500 ohms. 40.4.4 Pulse Width Modulation Controller (PWM)

Failure: 
 1.1.14  SYSCFG SUSPSRC Bits Not Functional for McBSP0, McBSP1, TIMER2, and VPIF  
Workaround: 
  When developing DSP software, the affected peripherals can be removed from halted  states by either free-running the ARM CPU or by setting the peripheral-specific  emulation mode to FREE. The affected peripherals can be placed into halted states by halting the ARM CPU.  Code Composer Studio (CCS) allows the user to set Global Breakpoints such that the  DSP and ARM CPUs will both halt at the same time on a given breakpoint. CCS also  includes the ability to simultaneously set debug states (such as RUN and HALT) across multiple processors. When the ARM and DSP both run and halt at the same time, the  peripherals will appear as if their suspend source is the DSP.  56  OMAP-L138 C6000 DSP+ARM® Processor Silicon Revisions 2.3, 2.1, 2.0,  SPRZ301M – June 2009 – Revised March 2014  1.1 and 1.0  Submit Documentation Feedback  Copyright © 2009–2014, Texas Instruments Incorporated  www.ti.com  Silicon Revision 1.1 Usage Notes and Known Design Exceptions to Functional Specifications 

Failure: 
41.11.6 TIMER_CLOCK2 not sampled on same edge as TIMER_CLOCKO and TIMER_CLOCK1
Workaround: 
None.

Failure: 
In word-wide frame-sync mode, if SSI_EN and TX/RX_EN are set near new frame start, SSI Receive and Transmit does not function properly and there is a chance of words getting missed/shifted or transmit data line being driven low for 1/2 clock cycles during the first frame.
Workaround: 
To ensure a gap of at least 2 bit-clock cycles between SSI_EN and TX/RX bit setting (only for External word-wide frame-sync patterns), here is an example code for this workaround. void ssi_transmit_receive_test() { //parameters defined here Statement1 (); //clock configuration here Statement2(); //AUDMUX configuration here Statement3(); //SSI configuration here Statement4(); //Enable SSI by programming SSI_SCR MEMWD(SSI2_SCR,scr_mask1); //delay some time for the SSI state machine to function //properly for(i=0;i<=5;i++); //Enable transmit and receive of SSI by programming //SSI_SCR MEMWD(SSI2_SCR,scr_mask2); ...... }

Failure: 
The Memory Controller  arbiter (MEMC) does not break  and release the ARMâ¢ coreâs  back-to-back burst access to the  other (for example, LCDC, DMA,  and MMA) bus masters. In this  situation, the ARM coreâs back-toback access does not use an IDLE  cycle as a separator.
Workaround: 
 Use a dummy DMA transfer to and from a dummy memory  space to force the MEMC to release the bus for other bus  masters. For more detailed information and code example,  please visit our website www.freescale.com/imx. 

-------------
Query: DMA: APBH/APBX DMA channel can stall while waiting to access a APBH/APBX bus peripheral when the channel freeze bit is set
NNs
Failure: 
The Memory Controller  arbiter (MEMC) does not break  and release the ARMâ¢ coreâs  back-to-back burst access to the  other (for example, LCDC, DMA,  and MMA) bus masters. In this  situation, the ARM coreâs back-toback access does not use an IDLE  cycle as a separator.
Workaround: 
 Use a dummy DMA transfer to and from a dummy memory  space to force the MEMC to release the bus for other bus  masters. For more detailed information and code example,  please visit our website www.freescale.com/imx. 

Failure: 
It is necessary to use a  separate timer to prevent access  to the SyncFlash immediately after  the SyncFlash is re-enabled from  deep low-power mode
Workaround: 
 Use the TIMER register to count 100 Î¼s to determine the time  period during which the user is not allowed to access the  SyncFlash. 

Failure: 
3.1 DMA.1: Single burst DMA memory-to-memory transfers have additional memory cycles when the DMA source memory is on the EMC bus 
Workaround: 
 When interfacing an external peripheral device that does not support burst mode access through the EMC Static Memory interface the following work-arounds are recommended: 1. Avoid using DMA to transfer read blocks of data from the external device. Instead use a software loop with LDR instruction to read blocks of data from the external device. 2. If DMA can't be avoided, ensure there is at least one unused address between the highest address used for the external device DMA data buffer and any status or control register in the device that will initiate any unwanted action just by reading from the register (i.e. clear an interrupt or status). 

Failure: 
ADC: GOVRE Bit is not Set when Disabling a Channel
Workaround: 
None

Failure: 
43.1.1.7 ADC: GOVRE Bit is Not Set when Disabling a Channel
Workaround: 
None

-------------
Query: When a software reset is performed during a frame and when TWCK is low, it is impossible to initiate a new transfer in READ or WRITE mode.
NNs
Failure: 
In word-wide frame-sync mode, if SSI_EN and TX/RX_EN are set near new frame start, SSI Receive and Transmit does not function properly and there is a chance of words getting missed/shifted or transmit data line being driven low for 1/2 clock cycles during the first frame.
Workaround: 
To ensure a gap of at least 2 bit-clock cycles between SSI_EN and TX/RX bit setting (only for External word-wide frame-sync patterns), here is an example code for this workaround. void ssi_transmit_receive_test() { //parameters defined here Statement1 (); //clock configuration here Statement2(); //AUDMUX configuration here Statement3(); //SSI configuration here Statement4(); //Enable SSI by programming SSI_SCR MEMWD(SSI2_SCR,scr_mask1); //delay some time for the SSI state machine to function //properly for(i=0;i<=5;i++); //Enable transmit and receive of SSI by programming //SSI_SCR MEMWD(SSI2_SCR,scr_mask2); ...... }

Failure: 
When Hardware Handshaking is used and if CTS goes low near the end of the starting bit, a character can be lost.
Workaround: 
CTS must not go low during a time slot occurring between 2 Master Clock periods before the starting bit and 16 Master Clock periods after the rising edge of the starting bit.

Failure: 
During a master frame, if TWI_SR is read between the Non Acknowledge condition detection and the TXCOMP bit
Workaround: 
The user must wait for the TXCOMP status bit by interrupt and must not read the TWI_SR as long as transmission is not completed. TXCOMP and NACK fields are set simultaneously and the NACK field is reset after the read of the TWI_SR. SAM7S Series [DATASHEET] 6175MâATARMâ26-Oct-12 653

Failure: 
3.5 Timer.1: In counter mode, the Timer Counter reset does not occur on the correct incoming edge Problem: Timer0 and Timer1 can be used in a counter mode. In this mode, the Timer Counter register can be incremented on rising, falling or both edges which occur on a selected CAP input pin. This counter mode can be combined with the match functionality to provide additional features. One of the features would be to reset the Timer Counter register on a match. The same would also apply for Timer1. Work-around: There are two possible workarounds: 1. Combine the Timer Counter reset feature with the âinterrupt on matchâ feature. The interrupt on match occurs on the correct incoming edge. In the ISR, the Timer Counter register can also be reset. This solution can only work if no edges are expected during the duration of the ISR. 2. In this solution, the âinterrupt on matchâ feature is not used. Instead, the following specific initialization can achieve the counting operation: a. Initialize the Timer Counter register to 0xFFFFFFFF. b. If ânâ edges have to be counted then initialize the corresponding Match register with value n-1. For instance, if 2 edges need to be counted then load the Match register with value 1. More details on the above example: 1. Edge 1 - Timer overflows and Timer Counter (TC) is set to 0. 2. Edge 2 - TC=1. Match takes place. 3. Edge 3 - TC=0. 4. Edge 4 - TC=1. Match takes place. 5. Edge 5 - TC=0. ES_LPC2220 . Â©   Rev. 2 â 1 April 2011 7 of 11  ES_LPC2220  LPC2220
Workaround: 


Failure: 
It is necessary to use a  separate timer to prevent access  to the SyncFlash immediately after  the SyncFlash is re-enabled from  deep low-power mode
Workaround: 
 Use the TIMER register to count 100 Î¼s to determine the time  period during which the user is not allowed to access the  SyncFlash. 

-------------
Query: 3.4 SPI.1: Incorrect shifting of data in slave mode at lower frequencies 
NNs
Failure: 
3.9 SPI.2: Incorrect shifting of data in slave mode at lower frequencies 
Workaround: 
 There are two possible workarounds: 1. Use CPHA=1. 2. If the data is shifted incorrectly when CPHA is set to 0 then delaying the write to SPDR after the half SCK cycle of the last sampling clock would resolve this issue. 

Failure: 
3.2 SPI.1: Incorrect shifting of data in slave mode at lower frequencies 
Workaround: 
 There are two possible workarounds: 1. Use CPHA=1. 2. If the data is shifted incorrectly when CPHA is set to 0 then delaying the write to SPDR after the half SCK cycle of the last sampling clock would resolve this issue. ES_LPC2220 . Â©   Rev. 2 â 1 April 2011 5 of 11  ES_LPC2220  LPC2220 

Failure: 
3.3 SSP.1: Initial data bits/clocks of the SSP transmission are shorter than subsequent pulses at higher frequencies 
Workaround: 
 None. 

Failure: 
3.5 SSP.1: Initial data bits/clocks of the SSP transmission are shorter than subsequent pulses at higher frequencies 
Workaround: 
 None. ES_LPC2102 . Â©   Rev. 2 â 1 March 2011 7 of 13  ES_LPC2102  LPC2102 

Failure: 
Standby current at QVDD and NVDD is higher than the typical value specified in data sheet.
Workaround: 
No workaround is available.

-------------
Query: 3.7 RTC.1: An RTC match doesnât drive the ONSW pin active (HIGH) 
NNs
Failure: 
3.6 RTC.1: An RTC match doesnât drive the ONSW pin active (HIGH) 
Workaround: 
 There is no work-around for this problem. 

Failure: 
3.5 RTC.1: An RTC match doesnât drive the ONSW pin active (HIGH) 
Workaround: 
 There is no work-around for this problem. 

Failure: 
4.2 VBAT.1: Increased power consumption on the VBAT pin when the VDD(1V8) core pin is left floating 
Workaround: 
 VDD(1V8) core pin must always be connected to its power supply or to ground.

Failure: 
3.12 CAP.1: Problem when selecting P0.21 as a capture 1.3 input (timer1) 
Workaround: 
 To use P0.21 as capture 1.3, PINSEL(7:6) must also be set to â11â which means that P0.19 must be selected as capture input 1.2. ES_LPC2114_24_00 . Â©   Rev. 3 â 1 April 2011 10 of 22  ES_LPC2114/24; LPC2114/24/00  LPC2114/24, LPC2114/00, LPC2124/00 

Failure: 
If the Least Significant Bit is sent first (MSBF = 0), the first TAG during the frame synchro is not sent.
Workaround: 
None.

-------------
Query: 3.6 LCD.1: Low throughput when LCD controller accesses DDR/SDRAM 
NNs
Failure: 
3.6 Ethernet.1: Setting up the Ethernet interface in RMII mode 
Workaround: 
 To use the Ethernet interface in RMII mode write a 1 to bit 12 (P1.16) in PINSEL2 register (located at 0xE002 C008). This workaround only applies for Rev â-â devices and does not apply for Rev âAâ and newer devices. In order to have both Rev â-â and other revisions coexist in the same piece of software, the MAC module ID can be used to identify the part and determine if port pin P1.6 needs to be set or not. Here are the steps (along with some sample code) to initialize the MAC based on the module ID: 1. In master header file lLPC24xx.h, make sure Module ID is defined (Please note, this ID register is not documented in the User's Manual). #define MAC_BASE_ADDR 0xFFE00000 #define MAC_MODULEID (*(volatile unsigned long *)(MAC_BASE_ADDR + 0xFFC)) /* Module ID reg (RO) */ 2. In the beginning of the MAC initialization file, add below definition: #define OLD_EMAC_MODULE_ID 0x3902 << 16) | 0x2000) 3. In MAC initialization routine, right after setting the EMAC clock in the PCONP register, add a few lines as below: /* Turn on the ethernet MAC clock in PCONP, bit 30 */ regVal = PCONP; regVal |= PCONP_EMAC_CLOCK; PCONP = regVal; /*------------------------------------------------------ * Write to PINSEL2/3 to select the PHY functions on P1[17:0] ES_LPC2364_66_68 . Â© NXP B.V. 2012. All rights reserved.  Rev. 9.1 â 1 July 2012 9 of 20  ES_LPC2364_66_68  LPC2364/66/68 * P1.6, ENET-TX_CLK, has to be set for Rev '-' devices and it * must not be set for Rev 'Aâ and newer devices *------------------------------------------------------*/ regVal = MAC_MODULEID; if ( regVal == OLD_EMAC_MODULE_ID ) { /* On Rev. '-', MAC_MODULEID should be equal to OLD_EMAC_MODULE_ID, P1.6 should be set. */ PINSEL2 = 0x50151105; /* selects P1[0,1,4,6,8,9,10,14,15] */ } else { /* on rev. 'A', MAC_MODULEID should not equal to OLD_EMAC_MODULE_ID, P1.6 should not be set. */ PINSEL2 = 0x50150105; /* selects P1[0,1,4,8,9,10,14,15] */ } PINSEL3 = 0x00000005; /* selects P1[17:16] */ 

Failure: 
41.12.7 Data lost on high latency
Workaround: 
None. 41.13 USART

Failure: 
3.1 ADC.1: External sync inputs not operational 
Workaround: 
 In software-controlled mode (BURST bit is 0), the START conversion options (bits 26:24 set to 0x1 or 0x4 or 0x5 or 0x6 or 0x7) can be used. The user can also start a conversion by connecting an external trigger signal to a capture input pin (CAPx) from a Timer peripheral to generate an interrupt. The timer interrupt routine can then start the ADC conversion by setting the START bits (26:24) to 0x1. The trigger can also be generated from a timer match register. ES_LPC2470_78 . Â© NXP B.V. 2012. All rights reserved.  Rev. 8.1 â 1 July 2012 5 of 13  ES_LPC2470_78  LPC2470/78 

Failure: 
3.1 DMA.1: Single burst DMA memory-to-memory transfers have additional memory cycles when the DMA source memory is on the EMC bus 
Workaround: 
 When interfacing an external peripheral device that does not support burst mode access through the EMC Static Memory interface the following work-arounds are recommended: 1. Avoid using DMA to transfer read blocks of data from the external device. Instead use a software loop with LDR instruction to read blocks of data from the external device. 2. If DMA can't be avoided, ensure there is at least one unused address between the highest address used for the external device DMA data buffer and any status or control register in the device that will initiate any unwanted action just by reading from the register (i.e. clear an interrupt or status). 

Failure: 
3.3 ADC.1: External sync inputs not operational 
Workaround: 
 In software-controlled mode (BURST bit is 0), the START conversion options (bits 26:24 set to 0x1 or 0x4 or 0x5 or 0x6 or 0x7) can be used. The user can also start a conversion by connecting an external trigger signal to a capture input pin (CAPx) from a Timer peripheral to generate an interrupt. The timer interrupt routine can then start the ADC conversion by setting the START bits (26:24) to 0x1. The trigger can also be generated from a timer match register.

-------------
Query: 3.16 PWM.1: Missed Interrupt Potential for the Match functionality. The description is the same as above.
NNs
Failure: 
3.5 Timer.1: In counter mode, the Timer Counter reset does not occur on the correct incoming edge Problem: Timer0 and Timer1 can be used in a counter mode. In this mode, the Timer Counter register can be incremented on rising, falling or both edges which occur on a selected CAP input pin. This counter mode can be combined with the match functionality to provide additional features. One of the features would be to reset the Timer Counter register on a match. The same would also apply for Timer1. Work-around: There are two possible workarounds: 1. Combine the Timer Counter reset feature with the âinterrupt on matchâ feature. The interrupt on match occurs on the correct incoming edge. In the ISR, the Timer Counter register can also be reset. This solution can only work if no edges are expected during the duration of the ISR. 2. In this solution, the âinterrupt on matchâ feature is not used. Instead, the following specific initialization can achieve the counting operation: a. Initialize the Timer Counter register to 0xFFFFFFFF. b. If ânâ edges have to be counted then initialize the corresponding Match register with value n-1. For instance, if 2 edges need to be counted then load the Match register with value 1. More details on the above example: 1. Edge 1 - Timer overflows and Timer Counter (TC) is set to 0. 2. Edge 2 - TC=1. Match takes place. 3. Edge 3 - TC=0. 4. Edge 4 - TC=1. Match takes place. 5. Edge 5 - TC=0. ES_LPC2220 . Â©   Rev. 2 â 1 April 2011 7 of 11  ES_LPC2220  LPC2220
Workaround: 


Failure: 
When Hardware Handshaking is used and if CTS goes low near the end of the starting bit, a character can be lost.
Workaround: 
CTS must not go low during a time slot occurring between 2 Master Clock periods before the starting bit and 16 Master Clock periods after the rising edge of the starting bit.

Failure: 
If CTS switches from 0 to 1 during the TX of a character and if the holding register (US_THR) is not empty, the content of US_THR will also be transmitted.
Workaround: 
Don't use the PDC in transmit mode and do not fill US_THR before TXEMPTY is set at 1.

Failure: 
When loading the TWI_RHR, the transfer direction is ignored. The last data byte received in the TWI_RHR is corrupted at the end of the first subsequent transmit data byte . Neither RXRDY nor OVERRUN status bits are set if
Workaround: 
The user must be sure that received data is read before transmitting any new data. 40.11.12 USART: Universal Synchronous Asynchronous Receiver Transmitter

Failure: 
If the Least Significant Bit is sent first (MSBF = 0), the first TAG during the frame synchro is not sent.
Workaround: 
None.

-------------
Query: 43.2.1.4 ADC: Possible Skip on DRDY when Disabling a Channel
NNs
Failure: 
ADC: Possible Skip on DRDY when Disabling a Channel
Workaround: 
None.

Failure: 
43.1.1.4 ADC: Possible Skip on DRDY when Disabling a Channel
Workaround: 
None.

Failure: 
ADC: GOVRE Bit is not Set when Disabling a Channel
Workaround: 
None

Failure: 
43.2.1.7 ADC: GOVRE Bit is Not Set when Disabling a Channel
Workaround: 
None

Failure: 
43.1.1.7 ADC: GOVRE Bit is Not Set when Disabling a Channel
Workaround: 
None

-------------
Query:  2.3.22  SATA: Link Establishment Fails With SATA GEN3 Capable Targets  
NNs
Failure: 
Multiple block transfer support fails if no BUSY signal is detected.
Workaround: 
No workaround is available for multiple block transfers. It requires card manufacturers to modify their firmwire to use single block transfers if not currently supported.

Failure: 
 1.1.8  USB 1.1 Phy Does Not Have Internal Pull Down on DP/DM Lines Enabled  
Workaround: 
  The 15 KΩ pull downs should be added to the DP/DM lines externally to the device.  SPRZ291I – October 2008 – Revised June 2014  OMAP-L137 Silicon Revisions 3.0, 2.1, 2.0, 1.1, and 1.0  45  Submit Documentation Feedback   1.1 Usage Notes and Known Design Exceptions to Functional Specifications www.ti.com      

Failure: 
SDRAM Power Down mode failing to support both CSD0 and CSD1 simultaneously.
Workaround: 
It is advised to program Powerdown Timout bits of SDCTL0 and SDCTL1 to ZERO when using both CSD0 and CSD1. This issue does not happen when single CSD0 or CSD1 is used.

Failure: 
Cannot fully support CF/CF+ specification.
Workaround: 
CF/CF+ card support: No workaround available to support WinCE OS. For other OS, basic functionality can be fulfilled by allocating 1 Kbyte to attribute memory and 1 Kbyte to I/O memory or common memory.

Failure: 
 1.1.1  ARM Data Cache in Write-Back Mode Is Not Functional: Must Use Write-Through  or Non-Cached Mode  
Workaround: 
  Only the Write-Through or Non-Cached mode can be used. Write-Through mode is preferred for better performance. The cache operation is controlled using the C and B  bits in page or section descriptors. For operation in Write-Through mode, the C and B  bits (bits 3:2 in the descriptor) must be set to a value of 10b.  The following is example code using a section descriptor to create a table entry for the first 1MB of external SDRAM on EMIFB as write-through cachable:  LDR  r1,  SDRAM0_ADDR  ; table offset for SDRAM0 region  LDR  r2,  SDRAM0_DATA  ; descriptor pattern for SDRAM0 region  STR  r2,  [r0, r1, LSL#2]  ; store the table entry at TTB base + table  offset * 4  SDRAM0_ADDR  .word  0x00000C00  SDRAM0_DATA  .word  0xC0000CFA  For more information on ARM data cache modes and how to configure them, refer to the ARM926EJ-S™ Technical Reference Manual available at www.arm.com/documentation.  Chapter 4 of the ARM926EJ-S™ Technical Reference Manual provides details about cache operations on the ARM926EJ-S processor.  Section descriptor: A section descriptor provides the base address of a 1MB block of memory. Figure 12 shows the format of a section descriptor.  31  20  19  12  11  10  9  8  5  4  3  2  1  0  section base address  AP  SBZ  AP  Domain  1  C  B  1  0      Figure 12. Section Descriptor   Table 6 shows the Section Descriptor bit assignments. Table 7 shows the Page Table C  and B bit settings for the DCache.  Table 6. Section Descriptor Bits  BITS      DESCRIPTION   31:20   Form the corresponding bits of the physical address for a section.  19:12  Always written as 0.  11:10  Specify the access permissions for this section.  9  Always written as 0.  Specify one of the 16 possible domains, held in the domain access control register, that contain the primary 8:5  access controls.  4  Should be written as 1, for backwards compatibility.  Indicate if the area of memory mapped by this section is treated as write-back cacheable, write-through 3:2  cacheable, noncached buffered, or noncached nonbuffered.  1:0  These bits must be 10 to indicate a section descriptor  SPRZ291I – October 2008 – Revised June 2014  OMAP-L137 Silicon Revisions 3.0, 2.1, 2.0, 1.1, and 1.0  39  Submit Documentation Feedback   1.1 Usage Notes and Known Design Exceptions to Functional Specifications www.ti.com  Table 7. Page Table C and B Bit Settings for the DCache  C BIT  B BIT      DESCRIPTION   ARM926EJ-S BEHAVIOR   DCache disabled. Read from external memory. Write as a nonbuffered  0  0  Noncacheable, nonbufferable  store(s) to external memory. DCache is not updated.  DCache disabled. Read from external memory. Write as a buffered  0  1  Noncacheable, bufferable  store(s) to external memory. DCache is not updated.  DCache enabled:  • Read hit - Read from DCache  • Read miss - Linefill  1  0  Write-through  • Write hit - Write to the DCache, and buffered store to external  memory  • Write miss - Buffered store to external memory  DCache enabled:  • Read hit - Read from DCache  1  1  Write-back  • Read miss - Linefill  • Write hit - Write to the DCache only  • Write miss - Buffered store to external memory  40  OMAP-L137 Silicon Revisions 3.0, 2.1, 2.0, 1.1, and 1.0  SPRZ291I – October 2008 – Revised June 2014  Submit Documentation Feedback   1.1 Usage Notes and Known Design Exceptions to Functional Specifications 

-------------
Query:  1.1.11  Hardware RESET Reliability Lifetime  
NNs
Failure: 
41.12.5 Software reset
Workaround: 
None.

Failure: 
41.12.6 TXCOMP and TXRDY reset
Workaround: 
None.

Failure: 
43.1.2.3 User Reset trigger is enabled by default
Workaround: 
Writing the URSTEN bit to 0 in RSTC_MR disables the User Reset trigger. 43.1.3 Bus Matrix

Failure: 
TWI: Software Reset
Workaround: 
None.

Failure: 
SPI: Software Reset and SPIEN Bit
Workaround: 
Send SPI disable command after a software reset.

-------------
Query:  1.1.3   SPI: Internally Generated SPI Clock Is Not 50% Duty Cycle  
NNs
Failure: 
Boot problem  due to improper clock  duty cycle  Note: Systems that  use 266 MHz are  not affected by  this bug.
Workaround: 
 There are both a hardware and a software workaround. To  guarantee correct operation, the software workaround should  only be applied to devices that have had the new PLL test applied.  The test will be applied from a date code 1105:  â¢ Workaround 1âHardware:  Keep MPLLVDD < 200 mV during the initial part of the power-up  sequence and delay the MPLLVDD supply with respect to QVDD,  NVDD5, and AVDD. See Figure 1 for a recommended power-up  sequence. This workaround sets the uninitialized node to the  correct state enabling the appropriate 399 MHz clock output duty  cycle. For the clock switching errata workaround, the following  conditions must be satisfied:  â QVDD must be powered up before MPLLVDD.  â NVCC5 must be powered up before MPLLVDD. (This is  required for the POR_B signal to propagate to the clock  gating logic.)  â AVDD must be powered up before MPLLVDD. (This is  required for the POR_B signal to propagate to the clock  gating logic.)  â MPLLVDD must be driven to 0, not floating, before  powering up  A suggested delay circuit is described in Figure 2.  â¢ Workaround 2âSoftware:  Originally for the ARM clock to work at 400 MHz, the MPLL is  configured for 800-MHz operating frequency at the 2x Clock Port  (see Figure 3 and code that follows the figure), and the DIV2  divider is selected by software to achieve the 400-MHz operating  frequency at the ARM core. The default 266-MHz frequency is  achieved by using the DIV3 divider with an 800-MHz frequency at  the 2x Clock Port (so 400-MHz MPLL frequency).  The intent of this workaround is to reconfigure the 2x Clock Port  to 1.2 GHz (600-MHz MPLL frequency), and continue to use the  DIV3 divider in order to achieve the 400-MHz operating  frequency. This avoids switching to the DIV2 divider, which  introduced the problem. 

Failure: 
3.8 Ethernet.3: Receive Status registers will not function correctly if RxDescriptor number is greater than 4 
Workaround: 
 Define 4 or less in the Receive number of Descriptors register. ES_LPC2364_66_68 . Â© NXP B.V. 2012. All rights reserved.  Rev. 9.1 â 1 July 2012 10 of 20  ES_LPC2364_66_68  LPC2364/66/68 

Failure: 
In word-wide frame-sync mode, if SSI_EN and TX/RX_EN are set near new frame start, SSI Receive and Transmit does not function properly and there is a chance of words getting missed/shifted or transmit data line being driven low for 1/2 clock cycles during the first frame.
Workaround: 
To ensure a gap of at least 2 bit-clock cycles between SSI_EN and TX/RX bit setting (only for External word-wide frame-sync patterns), here is an example code for this workaround. void ssi_transmit_receive_test() { //parameters defined here Statement1 (); //clock configuration here Statement2(); //AUDMUX configuration here Statement3(); //SSI configuration here Statement4(); //Enable SSI by programming SSI_SCR MEMWD(SSI2_SCR,scr_mask1); //delay some time for the SSI state machine to function //properly for(i=0;i<=5;i++); //Enable transmit and receive of SSI by programming //SSI_SCR MEMWD(SSI2_SCR,scr_mask2); ...... }

Failure: 
3.5 Timer.1: In counter mode, the Timer Counter reset does not occur on the correct incoming edge Problem: Timer0 and Timer1 can be used in a counter mode. In this mode, the Timer Counter register can be incremented on rising, falling or both edges which occur on a selected CAP input pin. This counter mode can be combined with the match functionality to provide additional features. One of the features would be to reset the Timer Counter register on a match. The same would also apply for Timer1. Work-around: There are two possible workarounds: 1. Combine the Timer Counter reset feature with the âinterrupt on matchâ feature. The interrupt on match occurs on the correct incoming edge. In the ISR, the Timer Counter register can also be reset. This solution can only work if no edges are expected during the duration of the ISR. 2. In this solution, the âinterrupt on matchâ feature is not used. Instead, the following specific initialization can achieve the counting operation: a. Initialize the Timer Counter register to 0xFFFFFFFF. b. If ânâ edges have to be counted then initialize the corresponding Match register with value n-1. For instance, if 2 edges need to be counted then load the Match register with value 1. More details on the above example: 1. Edge 1 - Timer overflows and Timer Counter (TC) is set to 0. 2. Edge 2 - TC=1. Match takes place. 3. Edge 3 - TC=0. 4. Edge 4 - TC=1. Match takes place. 5. Edge 5 - TC=0. ES_LPC2220 . Â©   Rev. 2 â 1 April 2011 7 of 11  ES_LPC2220  LPC2220
Workaround: 


Failure: 
43.1.10.4 SPI: Software Reset Needs to be Written Twice
Workaround: 
The SPI Control Register ï¬eld SWRST needs to be written twice to be correctly set. 43.1.11 Serial Synchronous Controller (SSC)

-------------
Query: 3.5 Deep power-down.1: Deep power-down mode is not functional 
NNs
Failure: 
 1.1.1  ARM Data Cache in Write-Back Mode Is Not Functional: Must Use Write-Through  or Non-Cached Mode  
Workaround: 
  Only the Write-Through or Non-Cached mode can be used. Write-Through mode is preferred for better performance. The cache operation is controlled using the C and B  bits in page or section descriptors. For operation in Write-Through mode, the C and B  bits (bits 3:2 in the descriptor) must be set to a value of 10b.  The following is example code using a section descriptor to create a table entry for the first 1MB of external SDRAM on EMIFB as write-through cachable:  LDR  r1,  SDRAM0_ADDR  ; table offset for SDRAM0 region  LDR  r2,  SDRAM0_DATA  ; descriptor pattern for SDRAM0 region  STR  r2,  [r0, r1, LSL#2]  ; store the table entry at TTB base + table  offset * 4  SDRAM0_ADDR  .word  0x00000C00  SDRAM0_DATA  .word  0xC0000CFA  For more information on ARM data cache modes and how to configure them, refer to the ARM926EJ-S™ Technical Reference Manual available at www.arm.com/documentation.  Chapter 4 of the ARM926EJ-S™ Technical Reference Manual provides details about cache operations on the ARM926EJ-S processor.  Section descriptor: A section descriptor provides the base address of a 1MB block of memory. Figure 12 shows the format of a section descriptor.  31  20  19  12  11  10  9  8  5  4  3  2  1  0  section base address  AP  SBZ  AP  Domain  1  C  B  1  0      Figure 12. Section Descriptor   Table 6 shows the Section Descriptor bit assignments. Table 7 shows the Page Table C  and B bit settings for the DCache.  Table 6. Section Descriptor Bits  BITS      DESCRIPTION   31:20   Form the corresponding bits of the physical address for a section.  19:12  Always written as 0.  11:10  Specify the access permissions for this section.  9  Always written as 0.  Specify one of the 16 possible domains, held in the domain access control register, that contain the primary 8:5  access controls.  4  Should be written as 1, for backwards compatibility.  Indicate if the area of memory mapped by this section is treated as write-back cacheable, write-through 3:2  cacheable, noncached buffered, or noncached nonbuffered.  1:0  These bits must be 10 to indicate a section descriptor  SPRZ291I – October 2008 – Revised June 2014  OMAP-L137 Silicon Revisions 3.0, 2.1, 2.0, 1.1, and 1.0  39  Submit Documentation Feedback   1.1 Usage Notes and Known Design Exceptions to Functional Specifications www.ti.com  Table 7. Page Table C and B Bit Settings for the DCache  C BIT  B BIT      DESCRIPTION   ARM926EJ-S BEHAVIOR   DCache disabled. Read from external memory. Write as a nonbuffered  0  0  Noncacheable, nonbufferable  store(s) to external memory. DCache is not updated.  DCache disabled. Read from external memory. Write as a buffered  0  1  Noncacheable, bufferable  store(s) to external memory. DCache is not updated.  DCache enabled:  • Read hit - Read from DCache  • Read miss - Linefill  1  0  Write-through  • Write hit - Write to the DCache, and buffered store to external  memory  • Write miss - Buffered store to external memory  DCache enabled:  • Read hit - Read from DCache  1  1  Write-back  • Read miss - Linefill  • Write hit - Write to the DCache only  • Write miss - Buffered store to external memory  40  OMAP-L137 Silicon Revisions 3.0, 2.1, 2.0, 1.1, and 1.0  SPRZ291I – October 2008 – Revised June 2014  Submit Documentation Feedback   1.1 Usage Notes and Known Design Exceptions to Functional Specifications 

Failure: 
Current consumption in Deep Mode is maximum 60 ÂµA instead of 25 ÂµA.
Workaround: 
None.

Failure: 
If Sleep mode is activated while there is no activity (no conversion is being performed), it will take effect only after
Workaround: 
To activate sleep mode as soon as possible, it is recommended to write successively, ADC Mode Register (SLEEP) then ADC Control Register (START bit field); to start an analog-to-digital conversion, in order put ADC into sleep mode at the end of this conversion. SAM7S Series [DATASHEET] 6175MâATARMâ26-Oct-12 647 40.11.3 Master Clock (MCK)

Failure: 
41.5.4 OSCBYPASS is not functional with PLLA
Workaround: 
Even if MCKRDY ï¬ag does not raise with PLLA, it will not prevent you from switching on it. You just need to wait for the PLLA lock time; for that program, PLLA then PLLB. When PLLB is ready, PLLA is ready too. Main Oscillator in Bypass Mode: CKGR_MOR = 0x00000002 PLLA programming: CKGR_PLLAR = 0x20063E01 PLLB programming: CKGR_PLLBR = 0x10173F05 Wait PLLB LOCKB bit: PMC_SR will be 0x00000000 Switch on PLLACK clock: PMC_MCKR -> 0x00000102 PMC_SR will be 0x00000000 41.6 ROM Bootloader ROM Bootloader: Limitation with 8-bit parallel memories. Limitation with 8-bit parallel memories. In the internal Boot ROM program, version 1.0, the wait state number on 080 is set to 0 during Boot ROM initialization. This gives an access time of 20 ns at 48 MHz Master Clock Frequency. This limitation of the ROM Bootloader applies to AT91RM9200 with the product number 58A07F. Problem Fix/Workaround None. 41.7 SDRAMC

Failure: 
Voltage Regulator: Current Consumption in Deep Mode
Workaround: 
None.

-------------
Query: 43.2.6.2 Mobile SDRAM Device Initialization Constraint
NNs
Failure: 
43.1.9.2 Mobile SDRAM Device Initialization Constraint
Workaround: 
Mobile SDRAM initialization must be performed in internal SRAM.

Failure: 
44.2.3.1 RSTC: Reset During SDRAM Accesses
Workaround: 
1. Avoid User Reset to generate a system reset. 2. Trap the User Reset with an interrupt. In the interrupt routine, Power Down SDRAM properly and perform Peripheral and Processor Reset with software in assembler. Example with libV3. - The main code: //user reset interrupt setting // Configure AIC controller to handle SSC interrupts AT91F_AIC_ConfigureIt ( AT91C_BASE_AIC, // AIC base address AT91C_ID_SYS, // System peripheral ID AT91C_AIC_PRIOR_HIGHEST, // Max priority AT91C_AIC_SRCTYPE_INT_EDGE_TRIGGERED, // Level sensitive sysc_handler ); // Enable SYSC interrupt in AIC AT91F_AIC_EnableIt (AT91C_BASE_AIC, AT91C_ID_SYS) ,' *AT91C_RSTC_R.MR = (0xA5<<24) | (0x4<<8) | AT91C_RSTC_URSTIEN; 0 The C SYS handler: extern void soft_user_reset (void); void sysc_handler (void) { A IIIEI. 793   6384AâATARMâ28-May-08   E Â® //check if interrupt comes from RSTC if( (*AT91C_RSTC_RSR s: AT91C_RSTC_URSTS ) == AT91C_RSTC_U'RSTS){ soft_user_reset(); //never reached while(1); } - The assembler routine: AREA TEST, CODE INCLUDEATSlSAMSxxx. inc EXPORTsoft_user_reset soft_user_reset ;disable IRQs MRS r0, CPSR ORR r0, r0, #0x80 MSR CPSR_C, r0 ;change refresh rate to block all data accesses LDR r0, =AT9lC_SDRAMC_TR LDR r1, 1 STR r1, [r0] ;prepare power down command LDR r0, =AT91C_SDRAMC_LPR LDR r1, =2 ;prepare proc_reset and periph_reset LDR r2, =AT91C_RSTC_RCR LDR r3, =0xA5000005 ;perform power down command STR r1, [r0] ;perform proc_reset and periph_reset (in the ARM pipeline) STR r3 , [r2] END 44.2.4 Serial Peripheral Interface (SPI)

Failure: 
43.2.7.1 RSTC: Reset during SDRAM Accesses
Workaround: 
1. Avoid user reset, watchdog reset, software reset to generate a system reset. 2. Trap the user reset, watchdog reset, software reset with an interrupt. In the interrupt routine, power down the SDRAM properly and perform Peripheral and Processor Reset with software in assembler. Example with IibV3. o The main code: //user reset interrupt setting // Configure AIC controller to handle System peripheral interrupts AT9lF_AIC_ConfigureIt ( AT91C_BASE_AIC, // AIC base address AT91C_ID_SYS, // System peripheral ID AT91C_AIC_PRIOR_HIGHEST, // Max priority AT91C_AIC_SRCTYPE_INT_EDGE_TRIGGERED, // Level sensitive sysc_handler ); // Enable SYSC interrupt in AIC AT91F_AIC_EnableIt (AT91C_BASE_AIC, AT91C_ID_SYS) ; *AT91C_RSTC_RMR = (0xA5<<24) | (Ox4<<8) | AT91C_RSTC_URSTIEN; o The C SYS handler: extern void soft_user_reset(void); void sysc_handler(void){ //check if interrupt comes from RSTC if( (*AT91C_RSTC_RSR & AT91C_RSTC_URSTS ) == AT91C_RSTC_URSTS){ soft_user_reset(); //never reached while(l); } l 0 Assembly code is mandatory for the following sequence as ARM instructions need to be pipelined. The assembler routine: AREA TEST, CODE 806 SAM9260 [DATASHEET] AImeI-6221M-ATARM-SAMQZSO-DatasheetJ3-Jan-16 A t meL INCLUDE ATQlSAM9xxx.inc EXPORTsoft_user_reset soft_user_reset ;disable IRQs MRS r0, CPSR ORR r0, r0, #0x80 MSR CPSR_c, r0 ;change refresh rate to block all data accesses LDR r0, =AT91C_SDRAMC_TR LDR rl, =1 STR rl, [r0] ;prepare power down command LDR r0, =AT91C_SDRAMC_LPR LDR rl, =2 ;prepare proc_reset and periph_reset LDR r2 , =AT91C_RSTC_RCR LDR r3, =0xA5000005 ;perform power down command STR rl, [r0] ;perform proc_reset and periph_reset (in the ARM pipeline) STR r3, [r2] END 43.2.8 Serial Peripheral Interface (SPI)

Failure: 
43.1.7.1 RSTC: Reset during SDRAM Accesses
Workaround: 
1. Avoid user reset, watchdog reset, software reset to generate a system reset. 2. Trap the user reset, watchdog reset, software reset with an interrupt. In the interrupt routine, power down the SDRAM properly and perform Peripheral and Processor Reset with software in assembler. Example with IibV3. o The main code: //user reset interrupt setting // Configure AIC controller to handle System peripheral interrupts AT9lF_AIC_ConfigureIt ( AT91C_BASE_AIC, // AIC base address AT91C_ID_SYS, // System peripheral ID AT91C_AIC_PRIOR_HIGHEST, // Max priority AT9lC_AIC_SRCTYPE_INT_EDGE_TRIGGERED, // Level sensitive sysc_handler ); // Enable SYSC interrupt in AIC AT9lF_AIC_EnableIt(AT91C_BASE_AIC, AT91C_ID_SYS); *AT91C_RSTC_RMR = (0xA5<<24) | (Ox4<<8) | AT91C_RSTC_URSTIEN; o The C SYS handler: extern void soft_user_reset(void); void sysc_handler(void){ //check if interrupt comes from RSTC if( (*AT91C_RSTC_RSR & AT9lC_RSTC_URSTS ) == AT91C_RSTC_URSTS){ soft_user_reset(); //never reached 794 SAM9260 [DATASH EET] AtmeL Almel-6221 M-ATARM-SAMQZSO-DatasheetJ 3-Jan-16 while(l); } } 0 Assembly code is mandatory for the following sequence as ARM instructions need to be pipelined. The assembler routine: AREA TEST, CODE INCLUDE AT91$AM9xxx.inc EXPORTsoft_user_reset soft_user_reset ;disable IRQs MRS r0, CPSR ORR r0, r0, #0x80 MSR CPSR_c, r0 ;change refresh rate to block all data accesses LDR r0, =AT91C_SDRAMC_TR LDR r1, =1 STR r1, [r0] ;prepare power down command LDR r0, =AT9lC_SDRAMC_LPR LDR rl, =2 ;prepare proc_reset and periph_reset LDR r2, =AT91C_RSTC_RCR LDR r3, =0xA5000005 ;perform power down command STR r1, [r0] ;perform proc_reset and periph_reset (in the ARM pipeline) STR r3, [r2] END 43.1.8 Oscillators

Failure: 
3.1 IAP.1: Flash memory programming interface timing problem 
Workaround: 
 1. The on-chip boot-loader software can be updated via ISP to correct this issue. The boot loader update files can be downloaded here: http://www.nxp.com/files/products/standard/microcontrollers/utilities/lpc2000_bl_update.zip The boot-loader version can be read out using the NXP Flash ISP Utility which can be found here: http://www.nxp.com/files/products/standard/microcontrollers/utilities/lpc2000_flash_utility.zip 2. Limiting the external clock frequency to 12 MHz AND making sure the on-chip PLL is turned OFF while programming any part of the Flash memory reduces the likelihood of the occurrence significantly. During In-System-Programming the PLL is turned off by default. ES_LPC2114_24_00 . Â©   Rev. 3 â 1 April 2011 5 of 22  ES_LPC2114/24; LPC2114/24/00  LPC2114/24, LPC2114/00, LPC2124/00 

-------------
Query: 3.6 Timer.1: In counter mode, the Timer Counter reset does not occur on the correct incoming edge 
NNs
Failure: 
3.2 Timer.1: In counter mode, the Timer Counter reset does not occur on the correct incoming edge 
Workaround: 


Failure: 
3.5 Timer.1: In counter mode, the Timer Counter reset does not occur on the correct incoming edge Problem: Timer0 and Timer1 can be used in a counter mode. In this mode, the Timer Counter register can be incremented on rising, falling or both edges which occur on a selected CAP input pin. This counter mode can be combined with the match functionality to provide additional features. One of the features would be to reset the Timer Counter register on a match. The same would also apply for Timer1. Work-around: There are two possible workarounds: 1. Combine the Timer Counter reset feature with the âinterrupt on matchâ feature. The interrupt on match occurs on the correct incoming edge. In the ISR, the Timer Counter register can also be reset. This solution can only work if no edges are expected during the duration of the ISR. 2. In this solution, the âinterrupt on matchâ feature is not used. Instead, the following specific initialization can achieve the counting operation: a. Initialize the Timer Counter register to 0xFFFFFFFF. b. If ânâ edges have to be counted then initialize the corresponding Match register with value n-1. For instance, if 2 edges need to be counted then load the Match register with value 1. More details on the above example: 1. Edge 1 - Timer overflows and Timer Counter (TC) is set to 0. 2. Edge 2 - TC=1. Match takes place. 3. Edge 3 - TC=0. 4. Edge 4 - TC=1. Match takes place. 5. Edge 5 - TC=0. ES_LPC2220 . Â©   Rev. 2 â 1 April 2011 7 of 11  ES_LPC2220  LPC2220
Workaround: 


Failure: 
The GP timer counter is reset even in freerun mode whenever the compare register is written.
Workaround: 
If more than one compare event is needed in freerun mode, use software comparisons instead.

Failure: 
41.11.7 Triggers do not clear the counter in UplDown Mode
Workaround: 
None. At m eL AT91RM9200 [DATASHEET] 689 Atmel-1768J-ATARM-ATQ1 RM9200-Damsheet_03-Mar-16

Failure: 
In word-wide frame-sync mode, if SSI_EN and TX/RX_EN are set near new frame start, SSI Receive and Transmit does not function properly and there is a chance of words getting missed/shifted or transmit data line being driven low for 1/2 clock cycles during the first frame.
Workaround: 
To ensure a gap of at least 2 bit-clock cycles between SSI_EN and TX/RX bit setting (only for External word-wide frame-sync patterns), here is an example code for this workaround. void ssi_transmit_receive_test() { //parameters defined here Statement1 (); //clock configuration here Statement2(); //AUDMUX configuration here Statement3(); //SSI configuration here Statement4(); //Enable SSI by programming SSI_SCR MEMWD(SSI2_SCR,scr_mask1); //delay some time for the SSI state machine to function //properly for(i=0;i<=5;i++); //Enable transmit and receive of SSI by programming //SSI_SCR MEMWD(SSI2_SCR,scr_mask2); ...... }

-------------
Query:  1.1.10  EMIFB: AC Timings Differ From Data Manual Specifications  
NNs
Failure: 
3.2 SPI.1: Incorrect shifting of data in slave mode at lower frequencies 
Workaround: 
 There are two possible workarounds: 1. Use CPHA=1. 2. If the data is shifted incorrectly when CPHA is set to 0 then delaying the write to SPDR after the half SCK cycle of the last sampling clock would resolve this issue. ES_LPC2220 . Â©   Rev. 2 â 1 April 2011 5 of 11  ES_LPC2220  LPC2220 

Failure: 
3.9 SPI.2: Incorrect shifting of data in slave mode at lower frequencies 
Workaround: 
 There are two possible workarounds: 1. Use CPHA=1. 2. If the data is shifted incorrectly when CPHA is set to 0 then delaying the write to SPDR after the half SCK cycle of the last sampling clock would resolve this issue. 

Failure: 
3.5 SSP.1: Initial data bits/clocks of the SSP transmission are shorter than subsequent pulses at higher frequencies 
Workaround: 
 None. ES_LPC2102 . Â©   Rev. 2 â 1 March 2011 7 of 13  ES_LPC2102  LPC2102 

Failure: 
3.3 SSP.1: Initial data bits/clocks of the SSP transmission are shorter than subsequent pulses at higher frequencies 
Workaround: 
 None. 

Failure: 
 2.3.25   USB0: CPU gets Stale Receive Data from the Data Buffer located in External      Memory   
Workaround: 
  Initialize the datalength descriptor field to zero. CPPI DMA updates this field after the completion of an RX DMA operation with the actual number of bytes received. In the ISR  (actually in a deferred call context), poll this field until it becomes a non-zero value to ensure data buffer has been updated with actual data. The descriptor buffer write is posted after the data buffer write, so waiting for the descriptor field to be updated ensures the data buffer has been updated. Since this workaround involves deferred procedure calls (whose schedule can be delayed depending on OS load), the latency sensitive application (like ISO Audio) might be affected by delay in notification to the application.  34  OMAP-L132 C6000™ DSP+ARM® Processor Silicon Revisions 2.3, 2.1  SPRZ317G – August 2011 – Revised March 2014  Submit Documentation Feedback  Copyright © 2011–2014, Texas Instruments Incorporated  www.ti.com  Silicon Revision 2.3 Usage Notes and Known Design Exceptions to Functional Specifications 

-------------
Query: 2.7 EMI bus limitations 2.7.1 Impact of SCU_CLKCNTR register modification on EMI operation with clock ratio of 2 
NNs
Failure: 
 2.0.20, no additional modifications are required as a fix for this Advisory.  As shown in Figure 10, issuing a second POR will always latch the BOOT pins while the internal pulldown resistors enabled.  SPRZ301M – June 2009 – Revised March 2014  OMAP-L138 C6000 DSP+ARM® Processor Silicon Revisions 2.3, 2.1, 2.0,  33  Submit Documentation Feedback  1.1 and 1.0  Copyright © 2009–2014, Texas Instruments Incorporated  Silicon Revision 2.3 Usage Notes and Known Design Exceptions to Functional Specifications www.ti.com  
Workaround: 
Workaround(s)

Failure: 
Standby current at QVDD and NVDD is higher than the typical value specified in data sheet.
Workaround: 
No workaround is available.

Failure: 
3.18 VBAT.1: Increased power consumption on VBAT when VBAT is powered before the 3.3 V supply used by rest of the device 
Workaround: 
 Provide 3.3 V supply used by rest of the device first and then provide VBAT voltage. 

Failure: 
3.5 Timer.1: In counter mode, the Timer Counter reset does not occur on the correct incoming edge Problem: Timer0 and Timer1 can be used in a counter mode. In this mode, the Timer Counter register can be incremented on rising, falling or both edges which occur on a selected CAP input pin. This counter mode can be combined with the match functionality to provide additional features. One of the features would be to reset the Timer Counter register on a match. The same would also apply for Timer1. Work-around: There are two possible workarounds: 1. Combine the Timer Counter reset feature with the âinterrupt on matchâ feature. The interrupt on match occurs on the correct incoming edge. In the ISR, the Timer Counter register can also be reset. This solution can only work if no edges are expected during the duration of the ISR. 2. In this solution, the âinterrupt on matchâ feature is not used. Instead, the following specific initialization can achieve the counting operation: a. Initialize the Timer Counter register to 0xFFFFFFFF. b. If ânâ edges have to be counted then initialize the corresponding Match register with value n-1. For instance, if 2 edges need to be counted then load the Match register with value 1. More details on the above example: 1. Edge 1 - Timer overflows and Timer Counter (TC) is set to 0. 2. Edge 2 - TC=1. Match takes place. 3. Edge 3 - TC=0. 4. Edge 4 - TC=1. Match takes place. 5. Edge 5 - TC=0. ES_LPC2220 . Â©   Rev. 2 â 1 April 2011 7 of 11  ES_LPC2220  LPC2220
Workaround: 


Failure: 
4.1 IRC.1: Accuracy of the Internal RC oscillator (IRC) frequency may be outside of the 4 MHz +/ï­ 1 % specification only at extreme temperatures 
Workaround: 
 None ES_LPC2470_78 . Â© NXP B.V. 2012. All rights reserved.  Rev. 8.1 â 1 July 2012 10 of 13  ES_LPC2470_78  LPC2470/78 4.2 IRC.2: Accuracy of the Internal RC Oscillator (IRC) frequency for devices only with date codes 0949 and before are outside of the 4 MHz +/ï­ 1 % specification only at temperatures between ï­20 ï°C and ï­40 ï°C Introduction: The device has a 4 MHz internal RC oscillator (IRC) which can be optionally used as the clock source for the Watch Dog Timer (WDT), and/or as the clock that drives the PLL and subsequently the CPU. The IRC frequency spec is 4 MHz +/ï­ 1 % accuracy over the entire voltage and temperature range. During In-System Programming (ISP), the auto-baud routine is expecting the IRC frequency to be 4 MHz +/ï­ 1 % and is used to synchronize with the host via serial port 0. Problem: On the LPC247X Rev D device (only with date codes 0949 and before), the accuracy of internal RC oscillator (IRC) frequency does not meet the 4 MHz +/ï­ 1 % specification for temperatures between ï­20 ï°C and ï­40 ï°C and the accuracy of internal RC oscillator (IRC) frequency is 4 MHz +/ï­ 5 % instead. As a result, only at these temperatures, this may affect the auto-baud routine's ability to synchronize with the host via serial port 0 during In-System Programming (ISP) at higher baud rates. For temperatures above ï­20 ï°C, the accuracy of internal RC oscillator (IRC) frequency meets the 4 MHz +/ï­ 1 % specification. Work-around: None 5. Errata notes detail 5.1 Note.1 On each of the following port pins P0.23, P0.24, P0.25, P0.26, P1.30, P1.31, P0.12, and P0.13 (when configured as general purpose input pin (s)), leakage current increases when the input voltage is Vi ï³ VDD I/O + 0.5 V. Care must be taken to limit the current to less than 4 mA by using a series limiting resistor. 5.2 Note.2 On the LPC2470/78 Rev D, design changes to the Memory Accelerator Module were made to enhance timing and general performance. Design changes are intended to enhance performance in general and will result in minor differences in the code execution timing between the previous device revisions and rev D. Actual performance impact is code dependent, some code sequences may speed up while other code sequences may slow down between the previous device revisions and rev D. This might be observed when using software delays and in such cases, a hardware timer should be used to generate a delay instead of a software delay. ES_LPC2470_78 . Â© NXP B.V. 2012. All rights reserved.  Rev. 8.1 â 1 July 2012 11 of 13

-------------
Query:  2.3.27  USB0: DMA Hung up in Frequent Teardowns  
NNs
Failure: 
 2.3.27   USB0: DMA Hung up in Frequent Teardowns  
Workaround: 
  Software should make sure that DMA does not get to an unknown state during teardown by disabling the DMAEN bit in the RXCSR register. After this the teardown procedure can be initiated. Software should also add 250 ms delay during teardown.  36  OMAP-L132 C6000™ DSP+ARM® Processor Silicon Revisions 2.3, 2.1  SPRZ317G – August 2011 – Revised March 2014  Submit Documentation Feedback  Copyright © 2011–2014, Texas Instruments Incorporated  www.ti.com  Silicon Revision 2.1 Usage Notes and Known Design Exceptions to Functional Specifications 3  Silicon Revision 2.1 Usage Notes and Known Design Exceptions to Functional      Specifications   This section describes the usage notes and advisories that apply to silicon revision 2.1 and earlier of the device.      3.1   Usage Notes for Silicon Revision 2.1  Usage notes highlight and describe particular situations where the device's behavior may not match presumed or documented behavior. This may include behaviors that affect device performance or functional correctness. These usage notes will be incorporated into future documentation updates for the device (such as the device-specific data sheet), and the behaviors they describe will not be altered in future silicon revisions.  Silicon revision 2.0 applicable usage notes have been found on a later silicon revision. For more details, see Section 2.2, Silicon Revision 2.3 Known Design Exceptions to Functional Specifications.      3.2   Silicon Revision 2.1 Known Design Exceptions to Functional Specifications  The advisories are not enumerated in sequential order and hence some numbers may not appear in the document  Table 13. Silicon Revision 2.1 Advisory List  Title ................................      Page   

Failure: 
 3.0.27  USB0: DMA Hung up in Frequent Teardowns  
Workaround: 
  Software should make sure that DMA does not get to an unknown state during teardown  by disabling the DMAEN bit in the RXCSR register. After this the teardown procedure  can be initiated. Software should also add 250 ms delay during teardown.  SPRZ291I – October 2008 – Revised June 2014  OMAP-L137 Silicon Revisions 3.0, 2.1, 2.0, 1.1, and 1.0  27  Submit Documentation Feedback   2.1 Usage Notes and Known Design Exceptions to Functional Specifications www.ti.com      3   Silicon Revision 2.1 Usage Notes and Known Design Exceptions to Functional      Specifications   This section describes the usage notes and advisories that apply to silicon revision 2.1 of the OMAP-L137.      3.1   Usage Notes for Silicon Revision 2.1  Usage notes highlight and describe particular situations where the device's behavior may not match presumed or documented behavior. This may include behaviors that affect device performance or functional correctness. These usage notes will be incorporated into future documentation updates for the device (such as the device-specific data sheet), and the behaviors they describe will not be altered in future silicon revisions.  Silicon revision 2.1 applicable usage notes have been found on a later silicon revision. For more details, see Section 2.1 Usage Notes for Silicon Revision 3.0.      3.2   Silicon Revision 2.1 Known Design Exceptions to Functional Specifications  Silicon revision 2.1 applicable advisories have been found on a later silicon revision. For more details, see Section 2.2 Silicon Revision 3.0 Known Design Exceptions to Functional Specifications Table 3. Silicon Revision 2.1 Advisory List  Title ................................      Page   

Failure: 
3.1 DMA.1: Single burst DMA memory-to-memory transfers have additional memory cycles when the DMA source memory is on the EMC bus 
Workaround: 
 When interfacing an external peripheral device that does not support burst mode access through the EMC Static Memory interface the following work-arounds are recommended: 1. Avoid using DMA to transfer read blocks of data from the external device. Instead use a software loop with LDR instruction to read blocks of data from the external device. 2. If DMA can't be avoided, ensure there is at least one unused address between the highest address used for the external device DMA data buffer and any status or control register in the device that will initiate any unwanted action just by reading from the register (i.e. clear an interrupt or status). 

Failure: 
 3.0.26   USB0: Early DMA Completion in DMA Receive Mode and More Than One Endpoint      is Transferring Data   
Workaround: 
  The workaround involves monitoring transfer data size before and after transferring and reconfiguring data transfer size by software if the before and after size is different.  Software must keep tracking every endpoint data transferring size. When DMA  completion interrupt is received, software checks size difference. If the size is not equal, software requests the remaining data.  26  OMAP-L137 Silicon Revisions 3.0, 2.1, 2.0, 1.1, and 1.0  SPRZ291I – October 2008 – Revised June 2014  Submit Documentation Feedback   3.0 Usage Notes and Known Design Exceptions to Functional Specifications 

Failure: 
 2.3.26  USB0: Early DMA Completion in DMA Receive Mode and More Than One Endpoint  is Transferring Data  
Workaround: 
  The workaround involves monitoring transfer data size before and after transferring and reconfiguring data transfer size by software if the before and after size is different.  Software must keep tracking every endpoint data transferring size. When DMA  completion interrupt is received, software checks size difference. If the size is not equal, software requests the remaining data.  SPRZ301M – June 2009 – Revised March 2014  OMAP-L138 C6000 DSP+ARM® Processor Silicon Revisions 2.3, 2.1, 2.0,  39  Submit Documentation Feedback  1.1 and 1.0  Copyright © 2009–2014, Texas Instruments Incorporated  Silicon Revision 2.3 Usage Notes and Known Design Exceptions to Functional Specifications www.ti.com  

-------------
Query: 43.1.6.4 MCI: Data Write Operation and Number of Bytes
NNs
Failure: 
43.2.5.4 MCI: Data Write Operation and Number of Bytes
Workaround: 
The PDC counters must always be equal to 12 bytes for data transfers lower than 12 bytes. The BLKLEN or BCNT field are used to specify the real count number.

Failure: 
44.2.2.4 MCI: Data Write Operation and number of bytes
Workaround: 
The PDC counters must always be equal to 12 bytes for data transfers lower than 12 bytes. The BLKLEN or BCNT field are used to specify the real count number.

Failure: 
Limitation on using DMA  for USBD IN data transfer.  There is a limitation on using DMA  to transfer continuous data from  memory to a 64-byte USBD FIFO  (FIFO1 and FIFO2) when using a  short packet (<37 bytes) followed  by a long packet (> 32 bytes).  For example: A 6 byte packet  followed by a 64 byte packet, or a  32 byte packet followed by a 40  byte packet such that the short  packet length + the long packet  length is greater than 64 bytes  (FIFO depth).
Workaround: 
 Two methods are used to prevent this limitation depending on  the data packet size:  1. For data packet sizes of less than 5 bytes:  After the short packet data transfer, software must poll the  USBD BYTE_COUNT==0 before initiating the next DMA  transfer. This ensures that FIFO can accept the next long  data packet of 64-bytes.  2. For data packet sizes of 5 bytes and greater:  Use a 32-byte FIFO instead of a 64-byte FIFO to ensure that  the DMA request is cleared. The granularity bits GR[2:0] must  be set to 111. 

Failure: 
3.2 MAM.1: Incorrect read of data from SRAM after Reset and MAM is not enabled or partially enabled 
Workaround: 
 User code should enable the MAM after Reset and before any RAM accesses; this means MAMTIM and MAMCR should be set as follows: MAMTIM: For CPU clock frequencies slower than 20 MHz, set MAMTIM to 0x01. For CPU clock frequencies between 20 MHz and 40 MHz, set MAMTIM to 0x02, and for values above 40 MHz set MAMTIM to 0x03. MAMCR: Set MAMCR to 0x02 (MAM functions fully enabled) MAMTIM should be written before MAMCR. 

Failure: 
43.2.5.1 MCI: Busy Signal of R15 Responses is Not Taken in Account
Workaround: 
None

-------------
Query: 3.6 INT.1: GPI_08 does not generate an interrupt signal 
NNs
Failure: 
3.7 INT.1: GPI_08 does not generate an interrupt signal 
Workaround: 
 There is no work-around for this problem. ES_LPC3240 . Â©   Rev. 9 â 1 June 2011 12 of 17  ES_LPC3240  LPC3240 

Failure: 
3.8 INT.1: GPI_08 does not generate an interrupt signal 
Workaround: 
 There is no work-around for this problem. ES_LPC3250 . Â©   Rev. 9 â 1 June 2011 12 of 17  ES_LPC3250  LPC3250 

Failure: 
Multiple block transfer support fails if no BUSY signal is detected.
Workaround: 
No workaround is available for multiple block transfers. It requires card manufacturers to modify their firmwire to use single block transfers if not currently supported.

Failure: 
3.8 Ethernet.3: Receive Status registers will not function correctly if RxDescriptor number is greater than 4 
Workaround: 
 Define 4 or less in the Receive number of Descriptors register. ES_LPC2364_66_68 . Â© NXP B.V. 2012. All rights reserved.  Rev. 9.1 â 1 July 2012 10 of 20  ES_LPC2364_66_68  LPC2364/66/68 

Failure: 
3.4 Timer0.1: Match 0.1 output cannot be seen on port pin P0.5 if configured as an alternate function 
Workaround: 
 Only P0.27 can be used for Match 0.1. ES_LPC2220 . Â©   Rev. 2 â 1 April 2011 6 of 11  ES_LPC2220  LPC2220 

-------------
Query: CLKCTRL: ENET 1588 clock (CLK_ENET_TIME) is not under control of ENET disable control bit
NNs
Failure: 
Any transfer in progress is immediately frozen if the Control Register (TWI_CR) is written with the bit MSDIS at 1.
Workaround: 
The user must wait for the end of transfer before disabling the TWI. In addition, the interrupts must be disabled before disabling the TWI.

Failure: 
The Memory Controller  arbiter (MEMC) does not break  and release the ARMâ¢ coreâs  back-to-back burst access to the  other (for example, LCDC, DMA,  and MMA) bus masters. In this  situation, the ARM coreâs back-toback access does not use an IDLE  cycle as a separator.
Workaround: 
 Use a dummy DMA transfer to and from a dummy memory  space to force the MEMC to release the bus for other bus  masters. For more detailed information and code example,  please visit our website www.freescale.com/imx. 

Failure: 
If Sleep mode is activated while there is no activity (no conversion is being performed), it will take effect only after
Workaround: 
To activate sleep mode as soon as possible, it is recommended to write successively, ADC Mode Register (SLEEP) then ADC Control Register (START bit field); to start an analog-to-digital conversion, in order put ADC into sleep mode at the end of this conversion. SAM7S Series [DATASHEET] 6175MâATARMâ26-Oct-12 647 40.11.3 Master Clock (MCK)

Failure: 
If CTS switches from 0 to 1 during the TX of a character and if the holding register (US_THR) is not empty, the content of US_THR will also be transmitted.
Workaround: 
Don't use the PDC in transmit mode and do not fill US_THR before TXEMPTY is set at 1.

Failure: 
Port A pin 17 (multiplexed  with DTACK) inadvertently affects  other chip-select functions when  DTACK is not used.
Workaround: 
 PA17 is restricted for the DTACK functionality only. Thus, in  any other situation when DTACK is not used, this pin must be  pulled up or tied high (may be done by simply setting the  corresponding PUEN bit, configuring it as an input, and  leaving the pin unconnected). If the DTACK functionality is  used, the pin will only toggle during CS5 accesses and  should not toggle during any non-CS5 access. 

-------------
Query: 3.2 ADC.1: First two ADC conversions in burst mode from same channel 
NNs
Failure: 
3.3 ADC.2: First conversion from channel specified by previous SEL setting 
Workaround: 
 Set the BURST/START bit(s) after setting the SEL bits. ES_LPC2114_24_00 . Â©   Rev. 3 â 1 April 2011 6 of 22  ES_LPC2114/24; LPC2114/24/00  LPC2114/24, LPC2114/00, LPC2124/00 

Failure: 
In receiver mode, when there are two consecutive characters (without timeguard in between), RXBRK is not taken
Workaround: 
Constraints on the transmitter device connected to the SAM7S USART receiver side: The transmitter may use the timeguard feature or send two STOP conditions. Only one STOP condition is taken into account by the receiver state machine. After this STOP condition, as there is no valid data, the receiver state machine will go in idle mode and enable the RXBRK flag.

Failure: 
3.5 Timer.1: In counter mode, the Timer Counter reset does not occur on the correct incoming edge Problem: Timer0 and Timer1 can be used in a counter mode. In this mode, the Timer Counter register can be incremented on rising, falling or both edges which occur on a selected CAP input pin. This counter mode can be combined with the match functionality to provide additional features. One of the features would be to reset the Timer Counter register on a match. The same would also apply for Timer1. Work-around: There are two possible workarounds: 1. Combine the Timer Counter reset feature with the âinterrupt on matchâ feature. The interrupt on match occurs on the correct incoming edge. In the ISR, the Timer Counter register can also be reset. This solution can only work if no edges are expected during the duration of the ISR. 2. In this solution, the âinterrupt on matchâ feature is not used. Instead, the following specific initialization can achieve the counting operation: a. Initialize the Timer Counter register to 0xFFFFFFFF. b. If ânâ edges have to be counted then initialize the corresponding Match register with value n-1. For instance, if 2 edges need to be counted then load the Match register with value 1. More details on the above example: 1. Edge 1 - Timer overflows and Timer Counter (TC) is set to 0. 2. Edge 2 - TC=1. Match takes place. 3. Edge 3 - TC=0. 4. Edge 4 - TC=1. Match takes place. 5. Edge 5 - TC=0. ES_LPC2220 . Â©   Rev. 2 â 1 April 2011 7 of 11  ES_LPC2220  LPC2220
Workaround: 


Failure: 
If CTS switches from 0 to 1 during the TX of a character and if the holding register (US_THR) is not empty, the content of US_THR will also be transmitted.
Workaround: 
Don't use the PDC in transmit mode and do not fill US_THR before TXEMPTY is set at 1.

Failure: 
3.2 NOR.1: When booting from NOR flash, SDRAM devices will not release the data bus, preventing the LPC3240 from booting correctly 
Workaround: 
 Since this issue only occurs with NOR FLASH, using one of the other boot methods such as NAND or SPI FLASH boot is a good workaround for the issue. If booting from NOR FLASH is a requirement, the simple circuit shown in Figure 3 can be used to clear the SDRAM state at system reset. This will not change the normal functioning of the LPC3240 EMC or SDRAM operations. If SDRAM devices are also present on the 2nd SDRAM chip select, a similar circuit will be needed for those devices using EMC_CKE1. ES_LPC3240 . Â©   Rev. 9 â 1 June 2011 7 of 17  ES_LPC3240  LPC3240 Fig 3. 128 MB DDR SDRAM example 

-------------
Query: 3.11 I2S.1: I2S DMA interface is non-operational 
NNs
Failure: 
3.1 IAP.1: Flash memory programming interface timing problem 
Workaround: 
 1. The on-chip boot-loader software can be updated via ISP to correct this issue. The boot loader update files can be downloaded here: http://www.nxp.com/files/products/standard/microcontrollers/utilities/lpc2000_bl_update.zip The boot-loader version can be read out using the NXP Flash ISP Utility which can be found here: http://www.nxp.com/files/products/standard/microcontrollers/utilities/lpc2000_flash_utility.zip 2. Limiting the external clock frequency to 12 MHz AND making sure the on-chip PLL is turned OFF while programming any part of the Flash memory reduces the likelihood of the occurrence significantly. During In-System-Programming the PLL is turned off by default. ES_LPC2114_24_00 . Â©   Rev. 3 â 1 April 2011 5 of 22  ES_LPC2114/24; LPC2114/24/00  LPC2114/24, LPC2114/00, LPC2124/00 

Failure: 
3.16 USB.2: U1CONNECT signal is not functional 
Workaround: 
 Configure P2.9 as a GPIO pin, and use it to enable the pull-up resistor on the U1D+ pin. ES_LPC2364_66_68 . Â© NXP B.V. 2012. All rights reserved.  Rev. 9.1 â 1 July 2012 14 of 20  ES_LPC2364_66_68  LPC2364/66/68 

Failure: 
 USB: USB core INCR8 and INCR16 modes are inoperable
Workaround: 
Set SBUSCFG.AHBBRST of the USB register to a modes other than 0b010 or 0b011.

Failure: 
3.6 Ethernet.1: Setting up the Ethernet interface in RMII mode 
Workaround: 
 To use the Ethernet interface in RMII mode write a 1 to bit 12 (P1.16) in PINSEL2 register (located at 0xE002 C008). This workaround only applies for Rev â-â devices and does not apply for Rev âAâ and newer devices. In order to have both Rev â-â and other revisions coexist in the same piece of software, the MAC module ID can be used to identify the part and determine if port pin P1.6 needs to be set or not. Here are the steps (along with some sample code) to initialize the MAC based on the module ID: 1. In master header file lLPC24xx.h, make sure Module ID is defined (Please note, this ID register is not documented in the User's Manual). #define MAC_BASE_ADDR 0xFFE00000 #define MAC_MODULEID (*(volatile unsigned long *)(MAC_BASE_ADDR + 0xFFC)) /* Module ID reg (RO) */ 2. In the beginning of the MAC initialization file, add below definition: #define OLD_EMAC_MODULE_ID 0x3902 << 16) | 0x2000) 3. In MAC initialization routine, right after setting the EMAC clock in the PCONP register, add a few lines as below: /* Turn on the ethernet MAC clock in PCONP, bit 30 */ regVal = PCONP; regVal |= PCONP_EMAC_CLOCK; PCONP = regVal; /*------------------------------------------------------ * Write to PINSEL2/3 to select the PHY functions on P1[17:0] ES_LPC2364_66_68 . Â© NXP B.V. 2012. All rights reserved.  Rev. 9.1 â 1 July 2012 9 of 20  ES_LPC2364_66_68  LPC2364/66/68 * P1.6, ENET-TX_CLK, has to be set for Rev '-' devices and it * must not be set for Rev 'Aâ and newer devices *------------------------------------------------------*/ regVal = MAC_MODULEID; if ( regVal == OLD_EMAC_MODULE_ID ) { /* On Rev. '-', MAC_MODULEID should be equal to OLD_EMAC_MODULE_ID, P1.6 should be set. */ PINSEL2 = 0x50151105; /* selects P1[0,1,4,6,8,9,10,14,15] */ } else { /* on rev. 'A', MAC_MODULEID should not equal to OLD_EMAC_MODULE_ID, P1.6 should not be set. */ PINSEL2 = 0x50150105; /* selects P1[0,1,4,8,9,10,14,15] */ } PINSEL3 = 0x00000005; /* selects P1[17:16] */ 

Failure: 
3.27 ADC.7: External sync inputs not operational 
Workaround: 
 In software-controlled mode (BURST bit is 0), the START conversion options (bits 26:24 set to 0x1 or 0x4 or 0x5 or 0x6 or 0x7) can be used. The user can also start a conversion by connecting an external trigger signal to a capture input pin (CAPx) from a Timer peripheral to generate an interrupt. The timer interrupt routine can then start the ADC conversion by setting the START bits (26:24) to 0x1. The trigger can also be generated from a timer match register. ES_LPC2109_19_29_00 . Â©   Rev. 3 â 1 April 2011 20 of 25  ES_LPC21x9; LPC21x9/00  LPC21x9; LPC21x9/00 4. AC/DC deviations detail 

-------------
Query:  3.0.22   USB 2.0 On-The-Go (OTG) Session Request Protocol (SRP) Is Not Supported  
NNs
Failure: 
 2.3.19  USB 2.0 On-The-Go (OTG) Session Request Protocol (SRP) Is Not Supported  
Workaround: 
  None  SPRZ301M – June 2009 – Revised March 2014  OMAP-L138 C6000 DSP+ARM® Processor Silicon Revisions 2.3, 2.1, 2.0,  29  Submit Documentation Feedback  1.1 and 1.0  Copyright © 2009–2014, Texas Instruments Incorporated  Silicon Revision 2.3 Usage Notes and Known Design Exceptions to Functional Specifications www.ti.com  

Failure: 
 1.1.9   USB2.0 (USB0) and USB1.1 (USB1) Power Supply  
Workaround: 
  To prevent a latch up condition from occurring over the life of the device, the following recommendations should be followed:  •  USB0_VDDA18 and USB1_VDDA18 power supply rails must have greater than 1ms  (10%-90%) slew  •  USB0_VDDA33 and USB1_VDDA33 power supply rails must have less than 100-mv  pk-pk noise  •  USB0_VBUS power supply rail must have less than 100-mv pk-pk noise sustained  and must have greater than 1ms (10%-90%) slew  46  OMAP-L137 Silicon Revisions 3.0, 2.1, 2.0, 1.1, and 1.0  SPRZ291I – October 2008 – Revised June 2014  Submit Documentation Feedback   1.1 Usage Notes and Known Design Exceptions to Functional Specifications 

Failure: 
2.8 Sleep mode current (ISLEEP) on VDDQ pins 
Workaround: 
 using revision G A limited workaround may be implemented to save around 120 ÂµA by using firmware to put the USB transceiver into Suspend mode (bit2, LP_MODE in the USB_CNTR register). This allows reducing Sleep mode current on VDDQ pins to around 380 ÂµA.  7/16 Silicon limitations and fixes STR91xFA Sleep mode current consumption on VDDQ pins is reduced to less than 10 ÂµA on revision H silicon devices. 

Failure: 
3.4 DDR.2: DDR EMC_D[15:0] to EMC_DQS[1:0] data output set-up time, tsu(Q), for MCU write to DDR provides limited timing margin Remark: This affects both 1.8 V mobile and 2.5 V DDR SDRAM system implementations. 
Workaround: 
 To get the most DDR set-up time margin, the following is recommended: 1. The DDR initialization software should set the SDRAMCLK_CTRL register (0x4000 4068) SDRAM_PIN_SPEED[3:1] bits = 0 (fast slew rate). This is for both 1.8 V mobile and 2.5 V DDR memories. 2. Systems requiring 128 MB or less of DDR should be implemented using a single EMC_DYCSx_N for DDR. The single chip select system may be constructed with a single 16-bit wide DDR or two 8-bit wide DDR SDRAMs using up to the maximum supported 512 Mbit DDR density. Using two 8-bit wide DDRs will have less capacitive loading and facilitate simple point-to-point routing of EMC_D[15:0] and EMC_DQS[1:0] signals over using two 16-bit DDRs and two EMC_DYCSx banks. 3. Series termination resistors are not needed for the LPC3240 EMC outputs. If series termination resistors are used they should be placed as close to the DDR EMC_D[15:0] and EMC_DQS[1:0] pins as possible. 4. If the data bus EMC_D[15:0] is shared with additional devices (i.e., NOR flash, buffers, etc.) the board should be routed with a daisy chain topology, where the LPC3240 is placed at one extreme of the data bus and the DDR(s) at the other extreme. Other device(s) should be placed between the LPC3240 and DDR memory (closer to the DDR). ES_LPC3240 . Â©   Rev. 9 â 1 June 2011 9 of 17  ES_LPC3240  LPC3240 5. The PCB trace length of EMC_DQS[1:0] should be at least 2 inches (but not more than 4 inches) longer than EMC_DQ[15:0] and EMC_DQM[1:0]. On a typical FR4 PCB this adds at least 334 ps to set-up time margin for DDR writes. For reads from DDR the increased trace length of EMC_DQS[1:0] will be automatically compensated for by the software initialization function find_ddr_dqsin_delay() which sets the optimal value DDR_DQSIN_DELAY(SDRAMCLK_CTRL[6:2]). The function find_ddr_dqsin_delay() can be found in the "DDR SDRAM setup code for the LPC32x0 series" on the NXP web site. Example 128 MB system DDR SDRAM using a single EMC_DYCSx_N: LPC32x0 EMC DDR high byte (64M x 8) EMC_D[15:08] DQ7:0 22ohms EMC_DQS1 DQS 22ohms EMC_DQM1 DM BA1:0 / A12:0 nCS CKE, nRAS, nCAS, nWE CLK nCLK VREF low byte (64M x 8) V+_EMC EMC_D[07:00] DQ7:0 22ohms EMC_DQS0 DQS 22ohms EMC_DQM0 DM 20Kohms EMC_A[14:00] BA1:0 / A12:0 0.1uF 1% EMC_DYCS0_N nCS EMC_Control CKE, nRAS, nCAS, nWE EMC_CLK CLK 20Kohms 0.1uF 1% EMC_CLK_N NC nCLK VREF EMC_CLKIN Fig 5. 128 MB DDR SDRAM example ES_LPC3240 . Â©   Rev. 9 â 1 June 2011 10 of 17  ES_LPC3240  LPC3240 

Failure: 
3.3 DDR.2: DDR EMC_D[15:0] to EMC_DQS[1:0] data output set-up time, tsu(Q), for MCU write to DDR provides limited timing margin Remark: This affects both 1.8 V mobile and 2.5 V DDR SDRAM system implementations. 
Workaround: 
 To get the most DDR set-up time margin, the following is recommended: 1. The DDR initialization software should set the SDRAMCLK_CTRL register (0x4000 4068) SDRAM_PIN_SPEED[3:1] bits = 0 (fast slew rate). This is for both 1.8 V mobile and 2.5 V DDR memories. 2. Systems requiring 128 MB or less of DDR should be implemented using a single EMC_DYCSx_N for DDR. The single chip select system may be constructed with a single 16-bit wide DDR or two 8-bit wide DDR SDRAMs using up to the maximum supported 512 Mbit DDR density. Using two 8-bit wide DDRs will have less capacitive loading and facilitate simple point-to-point routing of EMC_D[15:0] and EMC_DQS[1:0] signals over using two 16-bit DDRs and two EMC_DYCSx banks. ES_LPC3220 . Â©   Rev. 9 â 1 June 2011 8 of 16  ES_LPC3220  LPC3220 3. Series termination resistors are not needed for the LPC3220 EMC outputs. If series termination resistors are used they should be placed as close to the DDR EMC_D[15:0] and EMC_DQS[1:0] pins as possible. 4. If the data bus EMC_D[15:0] is shared with additional devices (i.e., NOR flash, buffers, etc.) the board should be routed with a daisy chain topology, where the LPC3220 is placed at one extreme of the data bus and the DDR(s) at the other extreme. Other device(s) should be placed between the LPC3220 and DDR memory (closer to the DDR). 5. The PCB trace length of EMC_DQS[1:0] should be at least 2 inches (but not more than 4 inches) longer than EMC_DQ[15:0] and EMC_DQM[1:0]. On a typical FR4 PCB this adds at least 334 ps to set-up time margin for DDR writes. For reads from DDR the increased trace length of EMC_DQS[1:0] will be automatically compensated for by the software initialization function find_ddr_dqsin_delay() which sets the optimal value DDR_DQSIN_DELAY(SDRAMCLK_CTRL[6:2]). The function find_ddr_dqsin_delay() can be found in the "DDR SDRAM setup code for the LPC32x0 series" on the NXP web site. Example 128 MB system DDR SDRAM using a single EMC_DYCSx_N: LPC32x0 EMC DDR high byte (64M x 8) EMC_D[15:08] DQ7:0 22ohms EMC_DQS1 DQS 22ohms EMC_DQM1 DM BA1:0 / A12:0 nCS CKE, nRAS, nCAS, nWE CLK nCLK VREF low byte (64M x 8) V+_EMC EMC_D[07:00] DQ7:0 22ohms EMC_DQS0 DQS 22ohms EMC_DQM0 DM 20Kohms EMC_A[14:00] BA1:0 / A12:0 0.1uF 1% EMC_DYCS0_N nCS EMC_Control CKE, nRAS, nCAS, nWE EMC_CLK CLK 20Kohms 0.1uF 1% EMC_CLK_N NC nCLK VREF EMC_CLKIN Fig 5. 128 MB DDR SDRAM example ES_LPC3220 . Â©   Rev. 9 â 1 June 2011 9 of 16  ES_LPC3220  LPC3220 

-------------
Query: 3.17 USB.3: VBUS status input is not functional 
NNs
Failure: 
3.16 USB.2: U1CONNECT signal is not functional 
Workaround: 
 Configure P2.9 as a GPIO pin, and use it to enable the pull-up resistor on the U1D+ pin. ES_LPC2364_66_68 . Â© NXP B.V. 2012. All rights reserved.  Rev. 9.1 â 1 July 2012 14 of 20  ES_LPC2364_66_68  LPC2364/66/68 

Failure: 
3.8 Ethernet.3: Receive Status registers will not function correctly if RxDescriptor number is greater than 4 
Workaround: 
 Define 4 or less in the Receive number of Descriptors register. ES_LPC2364_66_68 . Â© NXP B.V. 2012. All rights reserved.  Rev. 9.1 â 1 July 2012 10 of 20  ES_LPC2364_66_68  LPC2364/66/68 

Failure: 
41.5.4 OSCBYPASS is not functional with PLLA
Workaround: 
Even if MCKRDY ï¬ag does not raise with PLLA, it will not prevent you from switching on it. You just need to wait for the PLLA lock time; for that program, PLLA then PLLB. When PLLB is ready, PLLA is ready too. Main Oscillator in Bypass Mode: CKGR_MOR = 0x00000002 PLLA programming: CKGR_PLLAR = 0x20063E01 PLLB programming: CKGR_PLLBR = 0x10173F05 Wait PLLB LOCKB bit: PMC_SR will be 0x00000000 Switch on PLLACK clock: PMC_MCKR -> 0x00000102 PMC_SR will be 0x00000000 41.6 ROM Bootloader ROM Bootloader: Limitation with 8-bit parallel memories. Limitation with 8-bit parallel memories. In the internal Boot ROM program, version 1.0, the wait state number on 080 is set to 0 during Boot ROM initialization. This gives an access time of 20 ns at 48 MHz Master Clock Frequency. This limitation of the ROM Bootloader applies to AT91RM9200 with the product number 58A07F. Problem Fix/Workaround None. 41.7 SDRAMC

Failure: 
 1.1.1  ARM Data Cache in Write-Back Mode Is Not Functional: Must Use Write-Through  or Non-Cached Mode  
Workaround: 
  Only the Write-Through or Non-Cached mode can be used. Write-Through mode is preferred for better performance. The cache operation is controlled using the C and B  bits in page or section descriptors. For operation in Write-Through mode, the C and B  bits (bits 3:2 in the descriptor) must be set to a value of 10b.  The following is example code using a section descriptor to create a table entry for the first 1MB of external SDRAM on EMIFB as write-through cachable:  LDR  r1,  SDRAM0_ADDR  ; table offset for SDRAM0 region  LDR  r2,  SDRAM0_DATA  ; descriptor pattern for SDRAM0 region  STR  r2,  [r0, r1, LSL#2]  ; store the table entry at TTB base + table  offset * 4  SDRAM0_ADDR  .word  0x00000C00  SDRAM0_DATA  .word  0xC0000CFA  For more information on ARM data cache modes and how to configure them, refer to the ARM926EJ-S™ Technical Reference Manual available at www.arm.com/documentation.  Chapter 4 of the ARM926EJ-S™ Technical Reference Manual provides details about cache operations on the ARM926EJ-S processor.  Section descriptor: A section descriptor provides the base address of a 1MB block of memory. Figure 12 shows the format of a section descriptor.  31  20  19  12  11  10  9  8  5  4  3  2  1  0  section base address  AP  SBZ  AP  Domain  1  C  B  1  0      Figure 12. Section Descriptor   Table 6 shows the Section Descriptor bit assignments. Table 7 shows the Page Table C  and B bit settings for the DCache.  Table 6. Section Descriptor Bits  BITS      DESCRIPTION   31:20   Form the corresponding bits of the physical address for a section.  19:12  Always written as 0.  11:10  Specify the access permissions for this section.  9  Always written as 0.  Specify one of the 16 possible domains, held in the domain access control register, that contain the primary 8:5  access controls.  4  Should be written as 1, for backwards compatibility.  Indicate if the area of memory mapped by this section is treated as write-back cacheable, write-through 3:2  cacheable, noncached buffered, or noncached nonbuffered.  1:0  These bits must be 10 to indicate a section descriptor  SPRZ291I – October 2008 – Revised June 2014  OMAP-L137 Silicon Revisions 3.0, 2.1, 2.0, 1.1, and 1.0  39  Submit Documentation Feedback   1.1 Usage Notes and Known Design Exceptions to Functional Specifications www.ti.com  Table 7. Page Table C and B Bit Settings for the DCache  C BIT  B BIT      DESCRIPTION   ARM926EJ-S BEHAVIOR   DCache disabled. Read from external memory. Write as a nonbuffered  0  0  Noncacheable, nonbufferable  store(s) to external memory. DCache is not updated.  DCache disabled. Read from external memory. Write as a buffered  0  1  Noncacheable, bufferable  store(s) to external memory. DCache is not updated.  DCache enabled:  • Read hit - Read from DCache  • Read miss - Linefill  1  0  Write-through  • Write hit - Write to the DCache, and buffered store to external  memory  • Write miss - Buffered store to external memory  DCache enabled:  • Read hit - Read from DCache  1  1  Write-back  • Read miss - Linefill  • Write hit - Write to the DCache only  • Write miss - Buffered store to external memory  40  OMAP-L137 Silicon Revisions 3.0, 2.1, 2.0, 1.1, and 1.0  SPRZ291I – October 2008 – Revised June 2014  Submit Documentation Feedback   1.1 Usage Notes and Known Design Exceptions to Functional Specifications 

Failure: 
3.17 Timer0.1: Match 0.1 output cannot be seen on port pin P0.5 if configured as an alternate function. 
Workaround: 
 Only P0.27 can be used for Match 0.1. ES_LPC2114_24_00 . Â©   Rev. 3 â 1 April 2011 13 of 22  ES_LPC2114/24; LPC2114/24/00  LPC2114/24, LPC2114/00, LPC2124/00 

-------------
Query: 44.2.7.1 UHP:Non-ISO IN Transfers
NNs
Failure: 
43.2.13.1 UHP: Non-ISO IN Transfers
Workaround: 
This problem can be avoided if the system guarantees that the status update can be completed within the same frame.

Failure: 
43.1.16.1 UHP: Non-ISO IN Transfers
Workaround: 
This problem can be avoided if the system guarantees that the status update can be completed within the same frame.

Failure: 
43.1.16.2 UHP: ISO OUT Transfers
Workaround: 
This problem can be avoided if the system can guarantee that no buffer underrun occurs during the transfer.

Failure: 
43.2.13.2 UHP: ISO OUT Transfers
Workaround: 
This problem can be avoided if the system can guarantee that no buffer underrun occurs during the transfer.

Failure: 
44.2.7.2 UHP: ISO OUT transfers
Workaround: 
This problem can be avoided if the system can guarantee that no buffer underrun occurs during the transfer.

-------------
Query: FlexCAN: Abort request blocks the CODE field
NNs
Failure: 
3.3 MAM.2: Under certain conditions in MAM Mode 2 code execution out of internal Flash can fail 
Workaround: 
 If the above problem is encountered then Mode 2 should not be used. Instead, partially enable the MAM using Mode 1. ES_LPC2102 . Â©   Rev. 2 â 1 March 2011 5 of 13  ES_LPC2102  LPC2102 

Failure: 
3.5 MAM.1: Under certain conditions in MAM Mode 2 code execution out of internal Flash can fail 
Workaround: 
 If the above problem is encountered then Mode 2 should not be used. Instead, partially enable the MAM using Mode 1. ES_LPC2131_01 . Â© NXP B.V. 2012. All rights reserved.  Rev. 2.1 â 1 May 2012 8 of 13  ES_LPC2131/01  LPC2131/01 

Failure: 
3.12 MAM.1: Under certain conditions in MAM Mode 2 code execution out of internal flash can fail 
Workaround: 
 If the above problem is encountered then Mode 2 should not be used. Instead, partially enable the MAM using Mode 1. 

Failure: 
3.4 Core.1: Incorrect update of the Abort Link register in Thumb state 
Workaround: 
 In a system that does not use Thumb state, there will be no problem. In a system that uses Thumb state but does not use data aborts, or does not try to use data aborts in a recoverable manner, there will be no problem. Otherwise the workaround is to ensure that a STR, STMIA or PUSH cannot precede a PC-relative load. One method for this is to add a NOP before any PC-relative load instruction. However this is would have to be done manually. ES_LPC2364_66_68 . Â© NXP B.V. 2012. All rights reserved.  Rev. 9.1 â 1 July 2012 8 of 20  ES_LPC2364_66_68  LPC2364/66/68 

Failure: 
3.5 Timer.1: In counter mode, the Timer Counter reset does not occur on the correct incoming edge Problem: Timer0 and Timer1 can be used in a counter mode. In this mode, the Timer Counter register can be incremented on rising, falling or both edges which occur on a selected CAP input pin. This counter mode can be combined with the match functionality to provide additional features. One of the features would be to reset the Timer Counter register on a match. The same would also apply for Timer1. Work-around: There are two possible workarounds: 1. Combine the Timer Counter reset feature with the âinterrupt on matchâ feature. The interrupt on match occurs on the correct incoming edge. In the ISR, the Timer Counter register can also be reset. This solution can only work if no edges are expected during the duration of the ISR. 2. In this solution, the âinterrupt on matchâ feature is not used. Instead, the following specific initialization can achieve the counting operation: a. Initialize the Timer Counter register to 0xFFFFFFFF. b. If ânâ edges have to be counted then initialize the corresponding Match register with value n-1. For instance, if 2 edges need to be counted then load the Match register with value 1. More details on the above example: 1. Edge 1 - Timer overflows and Timer Counter (TC) is set to 0. 2. Edge 2 - TC=1. Match takes place. 3. Edge 3 - TC=0. 4. Edge 4 - TC=1. Match takes place. 5. Edge 5 - TC=0. ES_LPC2220 . Â©   Rev. 2 â 1 April 2011 7 of 11  ES_LPC2220  LPC2220
Workaround: 


-------------
Query: 41.3.6 STOP command with SYNCHRONISED special command
NNs
Failure: 
41.3.4 STOP during a WRITE_MULTIPLE_BLOCK command
Workaround: 
Choose an appropriate size for the block length.

Failure: 
41.3.10 STOP during a READ_MULT|PLE_BLOCK command
Workaround: 
It consists in doing a software reset if RXRDY = 1 after the STOP_COMMAND. This ï¬ag indicates that the MMCI receives more data than the PDC has been settle to transfer. After this soft reset the MCI_CR, MCI_MR, MCI_DTOR, MCI_SDCR need to be reassigned. At m eL AT91RM9200 [DATASHEET] 683 Atmel-1768J-ATARM-ATQ1 RM9200-Damsheet_03-Mar-16

Failure: 
41.3.3 STREAM command not supported
Workaround: 
None. 682 AT91RM9200 [DATASHEET] AtmeL Almel-1768J-ATARM-AT91 RM9200-Datasheet_03-Marâ1 G

Failure: 
The SPI Command âsoftware resetâ does not reset the SPIEN config bit. Therefore rewriting an SPI enable command does not set TX_READY, TX_EMPTY flags.
Workaround: 
Send SPI disable command after a software reset.

Failure: 
It is necessary to use a  separate timer to prevent access  to the SyncFlash immediately after  the SyncFlash is re-enabled from  deep low-power mode
Workaround: 
 Use the TIMER register to count 100 Î¼s to determine the time  period during which the user is not allowed to access the  SyncFlash. 

-------------
Query: 3.26 Reset.1: Device does not power up correctly under certain internal conditions Problem: If certain rare chip-internal conditions are met, the device will not start up correctly when executing a power-on reset. The crystal oscillator will be running but the device will not execute code. Work-around: Apply a second (warm) reset pulse (without power-on cycle). The minimum time requirement between the first (unsuccessful) reset and the second reset is 4105 external oscillator clock cycles, which means that the assertion of the second reset should occur 4105 cycles or more after the deassertion of the first reset. For example, at 10 MHz, this is equal to 411 ï­s; at 20 MHz, this is equal to 206 ï­s. This can be achieved by using an external watchdog timer or by any other circuitry in the application that is able to assert a second reset pulse. The root cause for this problem has been identified and will be fixed from Revision B of this device onwards. This problem will also be fixed in the LPC21x9/00 version of this device which will have a dedicated order number (LPC21x9FBD64/00). ES_LPC2109_19_29_00 . Â©   Rev. 3 â 1 April 2011 19 of 25  ES_LPC21x9; LPC21x9/00  LPC21x9; LPC21x9/00
NNs
Failure: 
3.5 Timer.1: In counter mode, the Timer Counter reset does not occur on the correct incoming edge Problem: Timer0 and Timer1 can be used in a counter mode. In this mode, the Timer Counter register can be incremented on rising, falling or both edges which occur on a selected CAP input pin. This counter mode can be combined with the match functionality to provide additional features. One of the features would be to reset the Timer Counter register on a match. The same would also apply for Timer1. Work-around: There are two possible workarounds: 1. Combine the Timer Counter reset feature with the âinterrupt on matchâ feature. The interrupt on match occurs on the correct incoming edge. In the ISR, the Timer Counter register can also be reset. This solution can only work if no edges are expected during the duration of the ISR. 2. In this solution, the âinterrupt on matchâ feature is not used. Instead, the following specific initialization can achieve the counting operation: a. Initialize the Timer Counter register to 0xFFFFFFFF. b. If ânâ edges have to be counted then initialize the corresponding Match register with value n-1. For instance, if 2 edges need to be counted then load the Match register with value 1. More details on the above example: 1. Edge 1 - Timer overflows and Timer Counter (TC) is set to 0. 2. Edge 2 - TC=1. Match takes place. 3. Edge 3 - TC=0. 4. Edge 4 - TC=1. Match takes place. 5. Edge 5 - TC=0. ES_LPC2220 . Â©   Rev. 2 â 1 April 2011 7 of 11  ES_LPC2220  LPC2220
Workaround: 


Failure: 
In word-wide frame-sync mode, if SSI_EN and TX/RX_EN are set near new frame start, SSI Receive and Transmit does not function properly and there is a chance of words getting missed/shifted or transmit data line being driven low for 1/2 clock cycles during the first frame.
Workaround: 
To ensure a gap of at least 2 bit-clock cycles between SSI_EN and TX/RX bit setting (only for External word-wide frame-sync patterns), here is an example code for this workaround. void ssi_transmit_receive_test() { //parameters defined here Statement1 (); //clock configuration here Statement2(); //AUDMUX configuration here Statement3(); //SSI configuration here Statement4(); //Enable SSI by programming SSI_SCR MEMWD(SSI2_SCR,scr_mask1); //delay some time for the SSI state machine to function //properly for(i=0;i<=5;i++); //Enable transmit and receive of SSI by programming //SSI_SCR MEMWD(SSI2_SCR,scr_mask2); ...... }

Failure: 
If CTS switches from 0 to 1 during the TX of a character and if the holding register (US_THR) is not empty, the content of US_THR will also be transmitted.
Workaround: 
Don't use the PDC in transmit mode and do not fill US_THR before TXEMPTY is set at 1.

Failure: 
Any transfer in progress is immediately frozen if the Control Register (TWI_CR) is written with the bit MSDIS at 1.
Workaround: 
The user must wait for the end of transfer before disabling the TWI. In addition, the interrupts must be disabled before disabling the TWI.

Failure: 
The Memory Controller  arbiter (MEMC) does not break  and release the ARMâ¢ coreâs  back-to-back burst access to the  other (for example, LCDC, DMA,  and MMA) bus masters. In this  situation, the ARM coreâs back-toback access does not use an IDLE  cycle as a separator.
Workaround: 
 Use a dummy DMA transfer to and from a dummy memory  space to force the MEMC to release the bus for other bus  masters. For more detailed information and code example,  please visit our website www.freescale.com/imx. 

-------------
Query: Under certain rare circumstances, if the Watchdog Timer is used with the Watchdog Fault Interrupt enabled
NNs
Failure: 
Under certain rare circumstances, if the Watchdog Timer is used with the Watchdog Reset enabled (WDRSTEN
Workaround: 
Two workarounds are possible. 1. Either do not use the Watchdog Timer with the Watchdog Reset enabled (WDRSTEN set at 1), 2. or set WDD to 0xFFF and in addition use only one of the following values for WDV: 0xFFF, 0xDFF, 0xBFF, 0x9FF, 0x7FF, 0x77F, 0x6FF, 0x67F, 0x5FF, 0x57F, 0x4FF, 0x47F, 0x3FF, 0x37F, 0x2FF, 0x27F, 0x1FF, 0x1BF, 0x17F, 0x13F, 0x0FF, 0x0DF, 0x0BF, 0x09F, 0x07F, 0x06F, 0x05F, 0x04F, 0x03F, 0x037, 0x02f, 0x027, 0x01F, 0x01B, 0x017, 0x013 and 0x00F.

Failure: 
It is necessary to use a  separate timer to prevent access  to the SyncFlash immediately after  the SyncFlash is re-enabled from  deep low-power mode
Workaround: 
 Use the TIMER register to count 100 Î¼s to determine the time  period during which the user is not allowed to access the  SyncFlash. 

Failure: 
During a master frame, if TWI_SR is read between the Non Acknowledge condition detection and the TXCOMP bit
Workaround: 
The user must wait for the TXCOMP status bit by interrupt and must not read the TWI_SR as long as transmission is not completed. TXCOMP and NACK fields are set simultaneously and the NACK field is reset after the read of the TWI_SR. SAM7S Series [DATASHEET] 6175MâATARMâ26-Oct-12 653

Failure: 
When the incorrect power-up or power-down sequence is used on the processor, unintentional programming of IIM fuses is possible, regardless of the set FuseVDD voltage, reconfiguring the part permanently.
Workaround: 
It is recommended to power up and power-down the processor following the power-up and power-down sequence documented in the MCIMX27 Multimedia Applications Processor Data Sheet.

Failure: 
In word-wide frame-sync mode, if SSI_EN and TX/RX_EN are set near new frame start, SSI Receive and Transmit does not function properly and there is a chance of words getting missed/shifted or transmit data line being driven low for 1/2 clock cycles during the first frame.
Workaround: 
To ensure a gap of at least 2 bit-clock cycles between SSI_EN and TX/RX bit setting (only for External word-wide frame-sync patterns), here is an example code for this workaround. void ssi_transmit_receive_test() { //parameters defined here Statement1 (); //clock configuration here Statement2(); //AUDMUX configuration here Statement3(); //SSI configuration here Statement4(); //Enable SSI by programming SSI_SCR MEMWD(SSI2_SCR,scr_mask1); //delay some time for the SSI state machine to function //properly for(i=0;i<=5;i++); //Enable transmit and receive of SSI by programming //SSI_SCR MEMWD(SSI2_SCR,scr_mask2); ...... }

-------------
